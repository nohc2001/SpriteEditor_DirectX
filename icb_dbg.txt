Inside Code Bake System Start
ICB_StaticInit...finish
Create_New_ICB_Extension_Init : exGeometry Initialization...finish
Create_New_ICB_Extension_Init : exEvent Initialization...finish
Create_New_ICB[000002A3FA7C5890] Initialization...finish
ICB[000002A3FA7C5890] ReadCode start. filename : [C:\Users\nohc2\OneDrive\ë°”íƒ• ?”ë©´\WorkRoom\Dev\SpriteEditor_DirectX\ECS_examples\ecs_sample0.txt]
ICB[000002A3FA7C5890] ReadCode_GetCodeFromText...finish
ICB[000002A3FA7C5890] ReadCode_AddTextBlocks...-----------------------------------------

 full text : 
pObject this;
uchar bechanged = 0;
uchar beDbg = 0;
#param end

int main(){
		int* HeapBuffer;
	Graphics_Init(&HeapBuffer);
	float PI = 3.141592;

		while(true){
				pSprite basicspr = 0;
		ChangeSpr(&basicspr, _pSprite(0), 0);

		prbuffer basicBuff = 0;
		ChangeRBuf(&basicBuff, _prbuffer(false), 0);
		gcolor basic_color = _gcolor(255, 255, 255, 255);

		begin(basicBuff, false);
		av(basicBuff, _gpos(-200, -100, 0), basic_color);
		av(basicBuff, _gpos(100, -100, 0), basic_color);
		av(basicBuff, _gpos(100, 100, 0), basic_color);
		av(basicBuff, _gpos(-100, 100, 0), basic_color);
		end(basicBuff);
		spr_push_rbuffer(basicspr, basicBuff);

		obj_setsource(this, basicspr);
		
				Release(0);
		bechanged = 0;
		while(bechanged == 0){
			int nocode = 0;
		}
	}
	
		Release(-1);
	return 0;
}ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ
6"pObject"
11"this"	12";"	18"uchar"	28"bechanged"
30"="	32"0"	33";"	39"uchar"
45"beDbg"	47"="	49"0"	50";"
52"#"	57"param"	61"end"	66"int"
71"main"	72"("	73")"	74"{"
80"int"	81"*"	92"HeapBuffer"	93";"
108"Graphics_Init"	109"("	110"&"	120"HeapBuffer"
121")"	122";"	129"float"	132"PI"
134"="	136"3"	137"."	143"141592"
144";"	153"while"	154"("	158"true"
159")"	160"{"	172"pSprite"	181"basicspr"
183"="	185"0"	186";"	198"ChangeSpr"
199"("	200"&"	208"basicspr"	209","
218"_pSprite"	219"("	220"0"	221")"
222","	224"0"	225")"	226";"
238"prbuffer"	248"basicBuff"	250"="	252"0"
253";"	266"ChangeRBuf"	267"("	268"&"
277"basicBuff"	278","	288"_prbuffer"	289"("
294"false"	295")"	296","	298"0"
299")"	300";"	309"gcolor"	321"basic_color"
323"="	331"_gcolor"	332"("	335"255"
336","	340"255"	341","	345"255"
346","	350"255"	351")"	352";"
361"begin"	362"("	371"basicBuff"	372","
378"false"	379")"	380";"	385"av"
386"("	395"basicBuff"	396","	402"_gpos"
403"("	404"-"	407"200"	408","
410"-"	413"100"	414","	416"0"
417")"	418","	430"basic_color"	431")"
432";"	437"av"	438"("	447"basicBuff"
448","	454"_gpos"	455"("	458"100"
459","	461"-"	464"100"	465","
467"0"	468")"	469","	481"basic_color"
482")"	483";"	488"av"	489"("
498"basicBuff"	499","	505"_gpos"	506"("
509"100"	510","	514"100"	515","
517"0"	518")"	519","	531"basic_color"
532")"	533";"	538"av"	539"("
548"basicBuff"	549","	555"_gpos"	556"("
557"-"	560"100"	561","	565"100"
566","	568"0"	569")"	570","
582"basic_color"	583")"	584";"	590"end"
591"("	600"basicBuff"	601")"	602";"
621"spr_push_rbuffer"	622"("	630"basicspr"	631","
641"basicBuff"	642")"	643";"	660"obj_setsource"
661"("	665"this"	666","	675"basicspr"
676")"	677";"	692"Release"	693"("
694"0"	695")"	696";"	708"bechanged"
710"="	712"0"	713";"	721"while"
722"("	731"bechanged"	733"="	734"="
736"0"	737")"	738"{"	745"int"
752"nocode"	754"="	756"0"	757";"
761"}"	764"}"	776"Release"	777"("
778"-"	779"1"	780")"	781";"
789"return"	791"0"	792";"	794"}"
combine block : 34 : "3" + "." + 36 : "141592" => "3.141592"
combine block : 104 : "-" + 105 : "200" => -200
combine block : 106 : "-" + 107 : "100" => -100
combine block : 122 : "-" + 123 : "100" => -100
combine block : 152 : "-" + 153 : "100" => -100
combine block : 193 : "=" + 194 : "=" => "=="
combine block : 206 : "-" + 207 : "1" => -1
finish
ICB[000002A3FA7C5890] ReadCode_ScanStructTypes...finish
ICB[000002A3FA7C5890] ReadCode_AddStructTypes...finish
ICB[000002A3FA7C5890] ReadCode_ScanCodes...start
[0] ~ add variable : add_var : pObject this  ~ [2]
[3] ~ add and set variable : adsetvar: uchar bechanged = 0  ~ [7]
[8] ~ add and set variable : adsetvar: uchar beDbg = 0  ~ [12]
[13] ~  ~ [13]
[14] ~  ~ [14]
[15] ~  ~ [15]
[16] ~ addfunction : addfunc : int main ( )  ~ [19]
[20] ~ blocks : start
[0] ~ add variable : add_var : int * HeapBuffer  ~ [3]
[4] ~ use Function : usefunc : Graphics_Init ( & HeapBuffer )  ~ [9]
[10] ~ add and set variable : adsetvar: float PI = 3.141592  ~ [14]
[15] ~ while : while__ : while ( true )  ~ [18]
[19] ~ blocks : start
[0] ~ add and set variable : adsetvar: pSprite basicspr = 0  ~ [4]
[5] ~ use Function : usefunc : ChangeSpr ( & basicspr , _pSprite ( 0 ) , 0 )  ~ [17]
[18] ~ add and set variable : adsetvar: prbuffer basicBuff = 0  ~ [22]
[23] ~ use Function : usefunc : ChangeRBuf ( & basicBuff , _prbuffer ( false ) , 0 )  ~ [35]
[36] ~ add and set variable : adsetvar: gcolor basic_color = _gcolor ( 255 , 255 , 255 , 255 )  ~ [49]
[50] ~ use Function : usefunc : begin ( basicBuff , false )  ~ [56]
[57] ~ use Function : usefunc : av ( basicBuff , _gpos ( -200 , -100 , 0 ) , basic_color )  ~ [72]
[73] ~ use Function : usefunc : av ( basicBuff , _gpos ( 100 , -100 , 0 ) , basic_color )  ~ [88]
[89] ~ use Function : usefunc : av ( basicBuff , _gpos ( 100 , 100 , 0 ) , basic_color )  ~ [104]
[105] ~ use Function : usefunc : av ( basicBuff , _gpos ( -100 , 100 , 0 ) , basic_color )  ~ [120]
[121] ~ use Function : usefunc : end ( basicBuff )  ~ [125]
[126] ~ use Function : usefunc : spr_push_rbuffer ( basicspr , basicBuff )  ~ [132]
[133] ~ use Function : usefunc : obj_setsource ( this , basicspr )  ~ [139]
[140] ~ use Function : usefunc : Release ( 0 )  ~ [144]
[145] ~  ~ [145]
[146] ~ set Variable : set_var : bechanged = 0  ~ [148]
[149] ~ while : while__ : while ( bechanged == 0 )  ~ [154]
[155] ~ blocks : start
[0] ~ add and set variable : adsetvar: int nocode = 0  ~ [4]
BakeCode_ScanCodes...block__ : {
adsetvar: int nocode = 0 
closed_ : }
 ~ [161]
BakeCode_ScanCodes...block__ : {
adsetvar: pSprite basicspr = 0 
usefunc : ChangeSpr ( & basicspr , _pSprite ( 0 ) , 0 ) 
adsetvar: prbuffer basicBuff = 0 
usefunc : ChangeRBuf ( & basicBuff , _prbuffer ( false ) , 0 ) 
adsetvar: gcolor basic_color = _gcolor ( 255 , 255 , 255 , 255 ) 
usefunc : begin ( basicBuff , false ) 
usefunc : av ( basicBuff , _gpos ( -200 , -100 , 0 ) , basic_color ) 
usefunc : av ( basicBuff , _gpos ( 100 , -100 , 0 ) , basic_color ) 
usefunc : av ( basicBuff , _gpos ( 100 , 100 , 0 ) , basic_color ) 
usefunc : av ( basicBuff , _gpos ( -100 , 100 , 0 ) , basic_color ) 
usefunc : end ( basicBuff ) 
usefunc : spr_push_rbuffer ( basicspr , basicBuff ) 
usefunc : obj_setsource ( this , basicspr ) 
usefunc : Release ( 0 ) 
set_var : bechanged = 0 
while__ : while ( bechanged == 0 ) 
block__ : {
adsetvar: int nocode = 0 
closed_ : }

closed_ : }
 ~ [182]
[183] ~ use Function : usefunc : Release ( -1 )  ~ [187]
[188] ~ return in Function : return_ : return 0  ~ [190]
BakeCode_ScanCodes...block__ : {
add_var : int * HeapBuffer 
usefunc : Graphics_Init ( & HeapBuffer ) 
adsetvar: float PI = 3.141592 
while__ : while ( true ) 
block__ : {
adsetvar: pSprite basicspr = 0 
usefunc : ChangeSpr ( & basicspr , _pSprite ( 0 ) , 0 ) 
adsetvar: prbuffer basicBuff = 0 
usefunc : ChangeRBuf ( & basicBuff , _prbuffer ( false ) , 0 ) 
adsetvar: gcolor basic_color = _gcolor ( 255 , 255 , 255 , 255 ) 
usefunc : begin ( basicBuff , false ) 
usefunc : av ( basicBuff , _gpos ( -200 , -100 , 0 ) , basic_color ) 
usefunc : av ( basicBuff , _gpos ( 100 , -100 , 0 ) , basic_color ) 
usefunc : av ( basicBuff , _gpos ( 100 , 100 , 0 ) , basic_color ) 
usefunc : av ( basicBuff , _gpos ( -100 , 100 , 0 ) , basic_color ) 
usefunc : end ( basicBuff ) 
usefunc : spr_push_rbuffer ( basicspr , basicBuff ) 
usefunc : obj_setsource ( this , basicspr ) 
usefunc : Release ( 0 ) 
set_var : bechanged = 0 
while__ : while ( bechanged == 0 ) 
block__ : {
adsetvar: int nocode = 0 
closed_ : }

closed_ : }

usefunc : Release ( -1 ) 
return_ : return 0 
closed_ : }
 ~ [212]
BakeCode_ScanCodes...finish
ICB[000002A3FA7C5890] ReadCode_GlobalMemoryInit...finish
ICB[000002A3FA7C5890] BakeCode_CompileCodes...start
add_var : pObject this 
BakeCode_CompileCodes__add_var : pObject this 
adsetvar: uchar bechanged = 0 
BakeCode_CompileCodes__adsetvar: uchar bechanged = 0 
6	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
11	:A=&Global_VID(178) > 8(8, 0, 0, 0)
16	:LA=A(161)
17	:*LA=A_1(169)
adsetvar: uchar beDbg = 0 
BakeCode_CompileCodes__adsetvar: uchar beDbg = 0 
18	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
23	:A=&Global_VID(178) > 9(9, 0, 0, 0)
28	:LA=A(161)
29	:*LA=A_1(169)
addfunc : int main ( ) 
BakeCode_CompileCodes__addfunc : int main ( ) 
block__ : {
add_var : int * HeapBuffer 
usefunc : Graphics_Init ( & HeapBuffer ) 
adsetvar: float PI = 3.141592 
while__ : while ( true ) 
block__ : {
adsetvar: pSprite basicspr = 0 
usefunc : ChangeSpr ( & basicspr , _pSprite ( 0 ) , 0 ) 
adsetvar: prbuffer basicBuff = 0 
usefunc : ChangeRBuf ( & basicBuff , _prbuffer ( false ) , 0 ) 
adsetvar: gcolor basic_color = _gcolor ( 255 , 255 , 255 , 255 ) 
usefunc : begin ( basicBuff , false ) 
usefunc : av ( basicBuff , _gpos ( -200 , -100 , 0 ) , basic_color ) 
usefunc : av ( basicBuff , _gpos ( 100 , -100 , 0 ) , basic_color ) 
usefunc : av ( basicBuff , _gpos ( 100 , 100 , 0 ) , basic_color ) 
usefunc : av ( basicBuff , _gpos ( -100 , 100 , 0 ) , basic_color ) 
usefunc : end ( basicBuff ) 
usefunc : spr_push_rbuffer ( basicspr , basicBuff ) 
usefunc : obj_setsource ( this , basicspr ) 
usefunc : Release ( 0 ) 
set_var : bechanged = 0 
while__ : while ( bechanged == 0 ) 
block__ : {
adsetvar: int nocode = 0 
closed_ : }

closed_ : }

usefunc : Release ( -1 ) 
return_ : return 0 
closed_ : }

BakeCode_CompileCodes Block Start {
add_var : int * HeapBuffer 
BakeCode_CompileCodes__add_var : int * HeapBuffer 
30	:ADD_STACK_VARIABLE(0) > 8(8, 0, 0, 0)
usefunc : Graphics_Init ( & HeapBuffer ) 
BakeCode_CompileCodes__usefunc : Graphics_Init ( & HeapBuffer ) 
35	:FUNC(153)
36	:A=&VID(159) > 8(8, 0, 0, 0)
41	:PARAM_8(185)
42	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 40(40, 0, 0, 0)
adsetvar: float PI = 3.141592 
BakeCode_CompileCodes__adsetvar: float PI = 3.141592 
51	:ADD_STACK_VARIABLE(0) > 12(12, 0, 0, 0)
56	:PUSH_A_CONST_4(6) > 1078530008(216, 15, 73, 64)
61	:A=&VID(159) > 12(12, 0, 0, 0)
66	:LA=A(161)
67	:*LA=A_4(171)
while__ : while ( true ) 
BakeCode_CompileCodes__while__ : while ( true ) 
68	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
73	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
adsetvar: pSprite basicspr = 0 
usefunc : ChangeSpr ( & basicspr , _pSprite ( 0 ) , 0 ) 
adsetvar: prbuffer basicBuff = 0 
usefunc : ChangeRBuf ( & basicBuff , _prbuffer ( false ) , 0 ) 
adsetvar: gcolor basic_color = _gcolor ( 255 , 255 , 255 , 255 ) 
usefunc : begin ( basicBuff , false ) 
usefunc : av ( basicBuff , _gpos ( -200 , -100 , 0 ) , basic_color ) 
usefunc : av ( basicBuff , _gpos ( 100 , -100 , 0 ) , basic_color ) 
usefunc : av ( basicBuff , _gpos ( 100 , 100 , 0 ) , basic_color ) 
usefunc : av ( basicBuff , _gpos ( -100 , 100 , 0 ) , basic_color ) 
usefunc : end ( basicBuff ) 
usefunc : spr_push_rbuffer ( basicspr , basicBuff ) 
usefunc : obj_setsource ( this , basicspr ) 
usefunc : Release ( 0 ) 
set_var : bechanged = 0 
while__ : while ( bechanged == 0 ) 
block__ : {
adsetvar: int nocode = 0 
closed_ : }

closed_ : }

BakeCode_CompileCodes Block Start {
adsetvar: pSprite basicspr = 0 
BakeCode_CompileCodes__adsetvar: pSprite basicspr = 0 
78	:ADD_STACK_VARIABLE(0) > 20(20, 0, 0, 0)
83	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
88	:A=&VID(159) > 20(20, 0, 0, 0)
93	:LA=A(161)
94	:*LA=A_8(186)
usefunc : ChangeSpr ( & basicspr , _pSprite ( 0 ) , 0 ) 
BakeCode_CompileCodes__usefunc : ChangeSpr ( & basicspr , _pSprite ( 0 ) , 0 ) 
95	:FUNC(153)
96	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
101	:PARAM_4(156)
102	:FUNC(153)
103	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
108	:PARAM_4(156)
109	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 23(23, 0, 0, 0)
118	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
123	:A=&VID(159) > 20(20, 0, 0, 0)
128	:PARAM_8(185)
129	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 45(45, 0, 0, 0)
adsetvar: prbuffer basicBuff = 0 
BakeCode_CompileCodes__adsetvar: prbuffer basicBuff = 0 
138	:ADD_STACK_VARIABLE(0) > 28(28, 0, 0, 0)
143	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
148	:A=&VID(159) > 28(28, 0, 0, 0)
153	:LA=A(161)
154	:*LA=A_8(186)
usefunc : ChangeRBuf ( & basicBuff , _prbuffer ( false ) , 0 ) 
BakeCode_CompileCodes__usefunc : ChangeRBuf ( & basicBuff , _prbuffer ( false ) , 0 ) 
155	:FUNC(153)
156	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
161	:PARAM_4(156)
162	:FUNC(153)
163	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
168	:PARAM_1(154)
169	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 11(11, 0, 0, 0)
178	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
183	:A=&VID(159) > 28(28, 0, 0, 0)
188	:PARAM_8(185)
189	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 44(44, 0, 0, 0)
adsetvar: gcolor basic_color = _gcolor ( 255 , 255 , 255 , 255 ) 
BakeCode_CompileCodes__adsetvar: gcolor basic_color = _gcolor ( 255 , 255 , 255 , 255 ) 
198	:ADD_STACK_VARIABLE(0) > 44(44, 0, 0, 0)
203	:FUNC(153)
204	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
209	:PARAM_1(154)
210	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
215	:PARAM_1(154)
216	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
221	:PARAM_1(154)
222	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
227	:PARAM_1(154)
228	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 5(5, 0, 0, 0)
237	:A=&VID(159) > 44(44, 0, 0, 0)
242	:LA=A(161)
243	:*LA=*A_N(182) > 16(16, 0, 0, 0)
usefunc : begin ( basicBuff , false ) 
BakeCode_CompileCodes__usefunc : begin ( basicBuff , false ) 
248	:FUNC(153)
249	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
254	:PARAM_1(154)
255	:A=&VID(159) > 28(28, 0, 0, 0)
260	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
265	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 12(12, 0, 0, 0)
usefunc : av ( basicBuff , _gpos ( -200 , -100 , 0 ) , basic_color ) 
BakeCode_CompileCodes__usefunc : av ( basicBuff , _gpos ( -200 , -100 , 0 ) , basic_color ) 
274	:FUNC(153)
275	:A=&VID(159) > 44(44, 0, 0, 0)
280	:PARAM_N_COPY_BY_ADDRESS(177) > 16(16, 0, 0, 0)
285	:FUNC(153)
286	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
291	:CASTING_A(163) > 12
293	:PARAM_4(156)
294	:PUSH_A_CONST_4(6) > -100(156, 255, 255, 255)
299	:CASTING_A(163) > 12
301	:PARAM_4(156)
302	:PUSH_A_CONST_4(6) > -200(56, 255, 255, 255)
307	:CASTING_A(163) > 12
309	:PARAM_4(156)
310	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 3(3, 0, 0, 0)
319	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
324	:A=&VID(159) > 28(28, 0, 0, 0)
329	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
334	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 14(14, 0, 0, 0)
usefunc : av ( basicBuff , _gpos ( 100 , -100 , 0 ) , basic_color ) 
BakeCode_CompileCodes__usefunc : av ( basicBuff , _gpos ( 100 , -100 , 0 ) , basic_color ) 
343	:FUNC(153)
344	:A=&VID(159) > 44(44, 0, 0, 0)
349	:PARAM_N_COPY_BY_ADDRESS(177) > 16(16, 0, 0, 0)
354	:FUNC(153)
355	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
360	:CASTING_A(163) > 12
362	:PARAM_4(156)
363	:PUSH_A_CONST_4(6) > -100(156, 255, 255, 255)
368	:CASTING_A(163) > 12
370	:PARAM_4(156)
371	:PUSH_A_CONST_4(6) > 100(100, 0, 0, 0)
376	:CASTING_A(163) > 12
378	:PARAM_4(156)
379	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 3(3, 0, 0, 0)
388	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
393	:A=&VID(159) > 28(28, 0, 0, 0)
398	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
403	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 14(14, 0, 0, 0)
usefunc : av ( basicBuff , _gpos ( 100 , 100 , 0 ) , basic_color ) 
BakeCode_CompileCodes__usefunc : av ( basicBuff , _gpos ( 100 , 100 , 0 ) , basic_color ) 
412	:FUNC(153)
413	:A=&VID(159) > 44(44, 0, 0, 0)
418	:PARAM_N_COPY_BY_ADDRESS(177) > 16(16, 0, 0, 0)
423	:FUNC(153)
424	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
429	:CASTING_A(163) > 12
431	:PARAM_4(156)
432	:PUSH_A_CONST_4(6) > 100(100, 0, 0, 0)
437	:CASTING_A(163) > 12
439	:PARAM_4(156)
440	:PUSH_A_CONST_4(6) > 100(100, 0, 0, 0)
445	:CASTING_A(163) > 12
447	:PARAM_4(156)
448	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 3(3, 0, 0, 0)
457	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
462	:A=&VID(159) > 28(28, 0, 0, 0)
467	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
472	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 14(14, 0, 0, 0)
usefunc : av ( basicBuff , _gpos ( -100 , 100 , 0 ) , basic_color ) 
BakeCode_CompileCodes__usefunc : av ( basicBuff , _gpos ( -100 , 100 , 0 ) , basic_color ) 
481	:FUNC(153)
482	:A=&VID(159) > 44(44, 0, 0, 0)
487	:PARAM_N_COPY_BY_ADDRESS(177) > 16(16, 0, 0, 0)
492	:FUNC(153)
493	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
498	:CASTING_A(163) > 12
500	:PARAM_4(156)
501	:PUSH_A_CONST_4(6) > 100(100, 0, 0, 0)
506	:CASTING_A(163) > 12
508	:PARAM_4(156)
509	:PUSH_A_CONST_4(6) > -100(156, 255, 255, 255)
514	:CASTING_A(163) > 12
516	:PARAM_4(156)
517	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 3(3, 0, 0, 0)
526	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
531	:A=&VID(159) > 28(28, 0, 0, 0)
536	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
541	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 14(14, 0, 0, 0)
usefunc : end ( basicBuff ) 
BakeCode_CompileCodes__usefunc : end ( basicBuff ) 
550	:FUNC(153)
551	:A=&VID(159) > 28(28, 0, 0, 0)
556	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
561	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 13(13, 0, 0, 0)
usefunc : spr_push_rbuffer ( basicspr , basicBuff ) 
BakeCode_CompileCodes__usefunc : spr_push_rbuffer ( basicspr , basicBuff ) 
570	:FUNC(153)
571	:A=&VID(159) > 28(28, 0, 0, 0)
576	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
581	:A=&VID(159) > 20(20, 0, 0, 0)
586	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
591	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 21(21, 0, 0, 0)
usefunc : obj_setsource ( this , basicspr ) 
BakeCode_CompileCodes__usefunc : obj_setsource ( this , basicspr ) 
600	:FUNC(153)
601	:A=&VID(159) > 20(20, 0, 0, 0)
606	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
611	:A=&Global_VID(178) > 0(0, 0, 0, 0)
616	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
621	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 36(36, 0, 0, 0)
usefunc : Release ( 0 ) 
BakeCode_CompileCodes__usefunc : Release ( 0 ) 
630	:FUNC(153)
631	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
636	:PARAM_4(156)
637	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 41(41, 0, 0, 0)
set_var : bechanged = 0 
BakeCode_CompileCodes__set_var : bechanged = 0 
646	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
651	:A=&Global_VID(178) > 8(8, 0, 0, 0)
656	:LA=A(161)
657	:*LA=A_1(169)
while__ : while ( bechanged == 0 ) 
BakeCode_CompileCodes__while__ : while ( bechanged == 0 ) 
658	:A=&Global_VID(178) > 8(8, 0, 0, 0)
663	:A=*A_nopush(165)
664	:PUSH_B_CONST_4(12) > 0(0, 0, 0, 0)
669	:CM_BOOL_SAME_A(91)
670	:POP_B(175)
671	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
adsetvar: int nocode = 0 
closed_ : }

BakeCode_CompileCodes Block Start {
adsetvar: int nocode = 0 
BakeCode_CompileCodes__adsetvar: int nocode = 0 
676	:ADD_STACK_VARIABLE(0) > 48(48, 0, 0, 0)
681	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
686	:A=&VID(159) > 48(48, 0, 0, 0)
691	:LA=A(161)
692	:*LA=A_4(171)
}; BakeCode_CompileCodes Block Finish
}; BakeCode_CompileCodes Block Finish
usefunc : Release ( -1 ) 
BakeCode_CompileCodes__usefunc : Release ( -1 ) 
703	:FUNC(153)
704	:PUSH_A_CONST_4(6) > -1(255, 255, 255, 255)
709	:PARAM_4(156)
710	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 41(41, 0, 0, 0)
return_ : return 0 
BakeCode_CompileCodes__return_ : return 0 
719	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
724	:RETURN(157)
}; BakeCode_CompileCodes Block Finish
BakeCode_CompileCodes...finish
ICB[000002A3FA7C5890] BakeCode finish.
Create_New_ICB[000002A3FA7C4E10] Initialization...finish
ICB[000002A3FA7C4E10] BakeCode start. filename : [ECS_examples/tool_Compas.txt]
ICB[000002A3FA7C4E10] BakeCode_GetCodeFromText...finish
ICB[000002A3FA7C4E10] BakeCode_AddTextBlocks...-----------------------------------------

 full text : 
pEventSystem evtsys;
pPostRenderTarget prt;
pICBEditor selectedICBE;
#param end

EventData evt;

gcolor state_text_color = _gcolor(255, 255, 255, 255);
rect4f stloc = _rect4f(-1000, 0, 0, 50);

char* state_text_stringptr = "blank state";

bool AddFlag = false;
bool Add_VariableFlag = false;
bool Add_FunctionFlag = false;
bool Add_Variable_VertexFlag = false;
bool Add_Variable_LineFlag = false;
bool Add_Variable_CircleFlag = false;

pRenderData RenderText_AddState = 0;
int state_text_layer = 0;

pRenderData RenderCoordx = 0;
pRenderData RenderCoordy = 0;
int coord_layer = 1;

EventData GetMessage(){
	while(1){
		evt = PopEvent(evtsys);
		if(evt.message != 0){
			return evt;
		}
	}
}

void AddVariableVertexStateWork(){
	if(MouseMove(evt)){
		vec2f scpos = GetMousePos_Screen(evt);
		ChangeRenderData(&RenderCoordx, _rdLine(-1000, scpos.y, 1000, scpos.y, _gcolor(255,	255, 255, 255)), coord_layer);
		ChangeRenderData(&RenderCoordy, _rdLine(scpos.x, -1000, scpos.x, 1000,  _gcolor(255, 255, 255, 255)), coord_layer);
		ReleaseRenderData(coord_layer);
	}
	else if(LBtnDown(evt)){
		vec2f objpos = GetMousePos_Object(evt);
		int cline = ICBE_GetCurrentLine(selectedICBE);
		ICBE_InsertLine(selectedICBE, cline);
		ICBE_SelectLine(selectedICBE, cline);
		ICBE_AddString(selectedICBE, "vec2f  = _vec2f(");
		char[32] Xstr = FloatToString(objpos.x, 32);
		char[32] Ystr = FloatToString(objpos.y, 32);
		ICBE_AddString(selectedICBE, Xstr);
		ICBE_AddString(selectedICBE, ", ");
		ICBE_AddString(selectedICBE, Ystr);
		ICBE_AddString(selectedICBE, ");");
		ICBE_SelectCharIndex(6);
	}
}

void AddVariableLineStateWork(){
}

void AddVariableCircleStateWork(){
}

void AddVariableStateWork(){
	bool inb = true;
	inb = inb || Add_Variable_VertexFlag;
	inb = inb || Add_Variable_LineFlag;
	inb = inb || Add_Variable_CircleFlag;
	if(inb == false){
		if(KeyDown(evt) && getEventKey(evt) == 'V'){
			Add_Variable_VertexFlag = true;
			state_text_stringptr = "Command : Add_Variable_Vertex";
		}
		if(KeyDown(evt) && getEventKey(evt) == 'L'){
			Add_Variable_LineFlag = true;
			state_text_stringptr = "Command : Add_Variable_Line";
		}
		if(KeyDown(evt) && getEventKey(evt) == 'C'){
			Add_Variable_CircleFlag = true;
			state_text_stringptr = "Command : Add_Variable_Circle";
		}
	}
	else{
		if(Add_Variable_VertexFlag){
			AddVariableVertexStateWork();
		}
		else if(Add_Variable_LineFlag){
			AddVariableLineStateWork();
		}
		else if(Add_Variable_CircleFlag){
			AddVariableCircleStateWork();
		}
	}
}

void AddStateWork(){
	if(Add_VariableFlag == false && Add_FunctionFlag == false){
		if(KeyDown(evt) && getEventKey(evt) == 'V'){
			Add_VariableFlag = true;
			state_text_stringptr = "Command : Add_Variable";
		}
		if(KeyDown(evt) && getEventKey(evt) == 'F'){
			Add_FunctionFlag = true;
			state_text_stringptr = "Command : Add_Function";
		}
	}
	else if(Add_VariableFlag){
		AddVariableStateWork();
	}
	else if(Add_FunctionFlag){
	}
}

void NoStateWork(){
	if(KeyDown(evt) && getEventKey(evt) == 'A'){
		AddFlag = true;
		state_text_stringptr = "Command : Add";
	}
}

void StateWork(){
	if(AddFlag == false){
		NoStateWork();
	}
	else{
		AddStateWork();
	}
}

int main(){
	while(true){
		evt = GetMessage();

		StateWork();

				ChangeRenderData(&RenderText_AddState, _rdText(stloc.fp.x, stloc.fp.y, stloc.lp.x, stloc.lp.y, state_text_stringptr, state_text_color, 20), state_text_layer);
		ReleaseRenderData(state_text_layer);
	}
}ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ
11"pEventSystem"
18"evtsys"	19";"	37"pPostRenderTarget"	41"prt"
42";"	53"pICBEditor"	66"selectedICBE"	67";"
69"#"	74"param"	78"end"	89"EventData"
93"evt"	94";"	102"gcolor"	119"state_text_color"
121"="	129"_gcolor"	130"("	133"255"
134","	138"255"	139","	143"255"
144","	148"255"	149")"	150";"
157"rect4f"	163"stloc"	165"="	173"_rect4f"
174"("	175"-"	179"1000"	180","
182"0"	183","	185"0"	186","
189"50"	190")"	191";"	197"char"
198"*"	219"state_text_stringptr"	221"="	235""blank state""
236";"	242"bool"	250"AddFlag"	252"="
258"false"	259";"	264"bool"	281"Add_VariableFlag"
283"="	289"false"	290";"	295"bool"
312"Add_FunctionFlag"	314"="	320"false"	321";"
326"bool"	350"Add_Variable_VertexFlag"	352"="	358"false"
359";"	364"bool"	386"Add_Variable_LineFlag"	388"="
394"false"	395";"	400"bool"	424"Add_Variable_CircleFlag"
426"="	432"false"	433";"	446"pRenderData"
466"RenderText_AddState"	468"="	470"0"	471";"
475"int"	492"state_text_layer"	494"="	496"0"
497";"	510"pRenderData"	523"RenderCoordx"	525"="
527"0"	528";"	540"pRenderData"	553"RenderCoordy"
555"="	557"0"	558";"	562"int"
574"coord_layer"	576"="	578"1"	579";"
590"EventData"	601"GetMessage"	602"("	603")"
604"{"	611"while"	612"("	613"1"
614")"	615"{"	621"evt"	623"="
632"PopEvent"	633"("	639"evtsys"	640")"
641";"	646"if"	647"("	650"evt"
651"."	658"message"	660"!"	661"="
663"0"	664")"	665"{"	675"return"
679"evt"	680";"	684"}"	687"}"
689"}"	695"void"	722"AddVariableVertexStateWork"	723"("
724")"	725"{"	729"if"	730"("
739"MouseMove"	740"("	743"evt"	744")"
745")"	746"{"	754"vec2f"	760"scpos"
762"="	781"GetMousePos_Screen"	782"("	785"evt"
786")"	787";"	806"ChangeRenderData"	807"("
808"&"	820"RenderCoordx"	821","	829"_rdLine"
830"("	831"-"	835"1000"	836","
842"scpos"	843"."	844"y"	845","
850"1000"	851","	857"scpos"	858"."
859"y"	860","	868"_gcolor"	869"("
872"255"	873","	877"255"	878","
882"255"	883","	887"255"	888")"
889")"	890","	902"coord_layer"	903")"
904";"	923"ChangeRenderData"	924"("	925"&"
937"RenderCoordy"	938","	946"_rdLine"	947"("
952"scpos"	953"."	954"x"	955","
957"-"	961"1000"	962","	968"scpos"
969"."	970"x"	971","	976"1000"
977","	986"_gcolor"	987"("	990"255"
991","	995"255"	996","	1000"255"
1001","	1005"255"	1006")"	1007")"
1008","	1020"coord_layer"	1021")"	1022";"
1042"ReleaseRenderData"	1043"("	1054"coord_layer"	1055")"
1056";"	1059"}"	1065"else"	1068"if"
1069"("	1077"LBtnDown"	1078"("	1081"evt"
1082")"	1083")"	1084"{"	1092"vec2f"
1099"objpos"	1101"="	1120"GetMousePos_Object"	1121"("
1124"evt"	1125")"	1126";"	1132"int"
1138"cline"	1140"="	1160"ICBE_GetCurrentLine"	1161"("
1173"selectedICBE"	1174")"	1175";"	1193"ICBE_InsertLine"
1194"("	1206"selectedICBE"	1207","	1213"cline"
1214")"	1215";"	1233"ICBE_SelectLine"	1234"("
1246"selectedICBE"	1247","	1253"cline"	1254")"
1255";"	1272"ICBE_AddString"	1273"("	1285"selectedICBE"
1286","	1305""vec2f  = _vec2f(""	1306")"	1307";"
1314"char"	1315"["	1317"32"	1318"]"
1323"Xstr"	1325"="	1339"FloatToString"	1340"("
1346"objpos"	1347"."	1348"x"	1349","
1352"32"	1353")"	1354";"	1361"char"
1362"["	1364"32"	1365"]"	1370"Ystr"
1372"="	1386"FloatToString"	1387"("	1393"objpos"
1394"."	1395"y"	1396","	1399"32"
1400")"	1401";"	1418"ICBE_AddString"	1419"("
1431"selectedICBE"	1432","	1437"Xstr"	1438")"
1439";"	1456"ICBE_AddString"	1457"("	1469"selectedICBE"
1470","	1475"", ""	1476")"	1477";"
1494"ICBE_AddString"	1495"("	1507"selectedICBE"	1508","
1513"Ystr"	1514")"	1515";"	1532"ICBE_AddString"
1533"("	1545"selectedICBE"	1546","	1551"");""
1552")"	1553";"	1576"ICBE_SelectCharIndex"	1577"("
1578"6"	1579")"	1580";"	1583"}"
1585"}"	1591"void"	1616"AddVariableLineStateWork"	1617"("
1618")"	1619"{"	1621"}"	1627"void"
1654"AddVariableCircleStateWork"	1655"("	1656")"	1657"{"
1659"}"	1665"void"	1686"AddVariableStateWork"	1687"("
1688")"	1689"{"	1695"bool"	1699"inb"
1701"="	1706"true"	1707";"	1712"inb"
1714"="	1718"inb"	1720"|"	1721"|"
1745"Add_Variable_VertexFlag"	1746";"	1751"inb"	1753"="
1757"inb"	1759"|"	1760"|"	1782"Add_Variable_LineFlag"
1783";"	1788"inb"	1790"="	1794"inb"
1796"|"	1797"|"	1821"Add_Variable_CircleFlag"	1822";"
1826"if"	1827"("	1830"inb"	1832"="
1833"="	1839"false"	1840")"	1841"{"
1846"if"	1847"("	1854"KeyDown"	1855"("
1858"evt"	1859")"	1861"&"	1861"&"
1874"getEventKey"	1875"("	1878"evt"	1879")"
1881"="	1882"="	1884"'"	1885"V"
1886"'"	1887")"	1888"{"	1915"Add_Variable_VertexFlag"
1917"="	1922"true"	1923";"	1947"state_text_stringptr"
1949"="	1981""Command : Add_Variable_Vertex""	1982";"	1986"}"
1991"if"	1992"("	1999"KeyDown"	2000"("
2003"evt"	2004")"	2006"&"	2006"&"
2019"getEventKey"	2020"("	2023"evt"	2024")"
2026"="	2027"="	2029"'"	2030"L"
2031"'"	2032")"	2033"{"	2058"Add_Variable_LineFlag"
2060"="	2065"true"	2066";"	2090"state_text_stringptr"
2092"="	2122""Command : Add_Variable_Line""	2123";"	2127"}"
2132"if"	2133"("	2140"KeyDown"	2141"("
2144"evt"	2145")"	2147"&"	2147"&"
2160"getEventKey"	2161"("	2164"evt"	2165")"
2167"="	2168"="	2170"'"	2171"C"
2172"'"	2173")"	2174"{"	2201"Add_Variable_CircleFlag"
2203"="	2208"true"	2209";"	2233"state_text_stringptr"
2235"="	2267""Command : Add_Variable_Circle""	2268";"	2272"}"
2275"}"	2281"else"	2282"{"	2287"if"
2288"("	2311"Add_Variable_VertexFlag"	2312")"	2313"{"
2343"AddVariableVertexStateWork"	2344"("	2345")"	2346";"
2350"}"	2357"else"	2360"if"	2361"("
2382"Add_Variable_LineFlag"	2383")"	2384"{"	2412"AddVariableLineStateWork"
2413"("	2414")"	2415";"	2419"}"
2426"else"	2429"if"	2430"("	2453"Add_Variable_CircleFlag"
2454")"	2455"{"	2485"AddVariableCircleStateWork"	2486"("
2487")"	2488";"	2492"}"	2495"}"
2497"}"	2503"void"	2516"AddStateWork"	2517"("
2518")"	2519"{"	2523"if"	2524"("
2540"Add_VariableFlag"	2542"="	2543"="	2549"false"
2551"&"	2551"&"	2569"Add_FunctionFlag"	2571"="
2572"="	2578"false"	2579")"	2580"{"
2585"if"	2586"("	2593"KeyDown"	2594"("
2597"evt"	2598")"	2600"&"	2600"&"
2613"getEventKey"	2614"("	2617"evt"	2618")"
2620"="	2621"="	2623"'"	2624"V"
2625"'"	2626")"	2627"{"	2647"Add_VariableFlag"
2649"="	2654"true"	2655";"	2679"state_text_stringptr"
2681"="	2706""Command : Add_Variable""	2707";"	2711"}"
2716"if"	2717"("	2724"KeyDown"	2725"("
2728"evt"	2729")"	2731"&"	2731"&"
2744"getEventKey"	2745"("	2748"evt"	2749")"
2751"="	2752"="	2754"'"	2755"F"
2756"'"	2757")"	2758"{"	2778"Add_FunctionFlag"
2780"="	2785"true"	2786";"	2810"state_text_stringptr"
2812"="	2837""Command : Add_Function""	2838";"	2842"}"
2845"}"	2851"else"	2854"if"	2855"("
2871"Add_VariableFlag"	2872")"	2873"{"	2896"AddVariableStateWork"
2897"("	2898")"	2899";"	2902"}"
2908"else"	2911"if"	2912"("	2928"Add_FunctionFlag"
2929")"	2930"{"	2933"}"	2935"}"
2941"void"	2953"NoStateWork"	2954"("	2955")"
2956"{"	2960"if"	2961"("	2968"KeyDown"
2969"("	2972"evt"	2973")"	2975"&"
2975"&"	2988"getEventKey"	2989"("	2992"evt"
2993")"	2995"="	2996"="	2998"'"
2999"A"	3000"'"	3001")"	3002"{"
3012"AddFlag"	3014"="	3019"true"	3020";"
3043"state_text_stringptr"	3045"="	3061""Command : Add""	3062";"
3065"}"	3067"}"	3073"void"	3083"StateWork"
3084"("	3085")"	3086"{"	3090"if"
3091"("	3098"AddFlag"	3100"="	3101"="
3107"false"	3108")"	3109"{"	3123"NoStateWork"
3124"("	3125")"	3126";"	3129"}"
3135"else"	3136"{"	3151"AddStateWork"	3152"("
3153")"	3154";"	3157"}"	3159"}"
3164"int"	3169"main"	3170"("	3171")"
3172"{"	3179"while"	3180"("	3184"true"
3185")"	3186"{"	3192"evt"	3194"="
3205"GetMessage"	3206"("	3207")"	3208";"
3221"StateWork"	3222"("	3223")"	3224";"
3246"ChangeRenderData"	3247"("	3248"&"	3267"RenderText_AddState"
3268","	3276"_rdText"	3277"("	3282"stloc"
3283"."	3285"fp"	3286"."	3287"x"
3288","	3294"stloc"	3295"."	3297"fp"
3298"."	3299"y"	3300","	3306"stloc"
3307"."	3309"lp"	3310"."	3311"x"
3312","	3318"stloc"	3319"."	3321"lp"
3322"."	3323"y"	3324","	3345"state_text_stringptr"
3346","	3363"state_text_color"	3364","	3367"20"
3368")"	3369","	3386"state_text_layer"	3387")"
3388";"	3408"ReleaseRenderData"	3409"("	3425"state_text_layer"
3426")"	3427";"	3430"}"	3432"}"
combine block : 34 : "-" + 35 : "1000" => -1000
combine block : 126 : "!" + 127 : "=" => "!="
combine block : 164 : "-" + 165 : "1000" => -1000
combine block : 202 : "-" + 203 : "1000" => -1000
combine block : 366 : "|" + 367 : "||" => "||"
combine block : 372 : "|" + 373 : "||" => "||"
combine block : 378 : "|" + 379 : "||" => "||"
combine block : 385 : "=" + 386 : "=" => "=="
combine block : 395 : "&" + 396 : "&" => "&&"
combine block : 400 : "=" + 401 : "=" => "=="
combine block : 401 ~ 403"'V'"
combine block : 419 : "&" + 420 : "&" => "&&"
combine block : 424 : "=" + 425 : "=" => "=="
combine block : 425 ~ 427"'L'"
combine block : 443 : "&" + 444 : "&" => "&&"
combine block : 448 : "=" + 449 : "=" => "=="
combine block : 449 ~ 451"'C'"
combine block : 506 : "=" + 507 : "=" => "=="
combine block : 508 : "&" + 509 : "&" => "&&"
combine block : 510 : "=" + 511 : "=" => "=="
combine block : 520 : "&" + 521 : "&" => "&&"
combine block : 525 : "=" + 526 : "=" => "=="
combine block : 526 ~ 528"'V'"
combine block : 544 : "&" + 545 : "&" => "&&"
combine block : 549 : "=" + 550 : "=" => "=="
combine block : 550 ~ 552"'F'"
combine block : 593 : "&" + 594 : "&" => "&&"
combine block : 598 : "=" + 599 : "=" => "=="
combine block : 599 ~ 601"'A'"
combine block : 620 : "=" + 621 : "=" => "=="
finish
ICB[000002A3FA7C4E10] BakeCode_ScanStructTypes...finish
ICB[000002A3FA7C4E10] BakeCode_AddStructTypes...finish
ICB[000002A3FA7C4E10] BakeCode_ScanCodes...start
[0] ~ add variable : add_var : pEventSystem evtsys  ~ [2]
[3] ~ add variable : add_var : pPostRenderTarget prt  ~ [5]
[6] ~ add variable : add_var : pICBEditor selectedICBE  ~ [8]
[9] ~  ~ [9]
[10] ~  ~ [10]
[11] ~  ~ [11]
[12] ~ add variable : add_var : EventData evt  ~ [14]
[15] ~ add and set variable : adsetvar: gcolor state_text_color = _gcolor ( 255 , 255 , 255 , 255 )  ~ [28]
[29] ~ add and set variable : adsetvar: rect4f stloc = _rect4f ( -1000 , 0 , 0 , 50 )  ~ [42]
[43] ~ add and set variable : adsetvar: char * state_text_stringptr = "blank state"  ~ [48]
[49] ~ add and set variable : adsetvar: bool AddFlag = false  ~ [53]
[54] ~ add and set variable : adsetvar: bool Add_VariableFlag = false  ~ [58]
[59] ~ add and set variable : adsetvar: bool Add_FunctionFlag = false  ~ [63]
[64] ~ add and set variable : adsetvar: bool Add_Variable_VertexFlag = false  ~ [68]
[69] ~ add and set variable : adsetvar: bool Add_Variable_LineFlag = false  ~ [73]
[74] ~ add and set variable : adsetvar: bool Add_Variable_CircleFlag = false  ~ [78]
[79] ~ add and set variable : adsetvar: pRenderData RenderText_AddState = 0  ~ [83]
[84] ~ add and set variable : adsetvar: int state_text_layer = 0  ~ [88]
[89] ~ add and set variable : adsetvar: pRenderData RenderCoordx = 0  ~ [93]
[94] ~ add and set variable : adsetvar: pRenderData RenderCoordy = 0  ~ [98]
[99] ~ add and set variable : adsetvar: int coord_layer = 1  ~ [103]
[104] ~ addfunction : addfunc : EventData GetMessage ( )  ~ [107]
[108] ~ blocks : start
[0] ~ while : while__ : while ( 1 )  ~ [3]
[4] ~ blocks : start
[0] ~  ~ [0]
[1] ~ set Variable : set_var : evt = PopEvent ( evtsys )  ~ [6]
[7] ~ IF : if__sen : if ( evt . message != 0 )  ~ [14]
[15] ~ blocks : start
[0] ~ return in Function : return_ : return evt  ~ [2]
BakeCode_ScanCodes...block__ : {
return_ : return evt 
closed_ : }
 ~ [19]
BakeCode_ScanCodes...block__ : {
set_var : evt = PopEvent ( evtsys ) 
if__sen : if ( evt . message != 0 ) 
block__ : {
return_ : return evt 
closed_ : }

closed_ : }
 ~ [25]
BakeCode_ScanCodes...block__ : {
while__ : while ( 1 ) 
block__ : {
set_var : evt = PopEvent ( evtsys ) 
if__sen : if ( evt . message != 0 ) 
block__ : {
return_ : return evt 
closed_ : }

closed_ : }

closed_ : }
 ~ [135]
[136] ~ add Function : addfunc : void AddVariableVertexStateWork ( )  ~ [139]
[140] ~ blocks : start
[0] ~ IF : if__sen : if ( MouseMove ( evt ) )  ~ [6]
[7] ~ blocks : start
[0] ~ add and set variable : adsetvar: vec2f scpos = GetMousePos_Screen ( evt )  ~ [7]
[8] ~ use Function : usefunc : ChangeRenderData ( & RenderCoordx , _rdLine ( -1000 , scpos . y , 1000 , scpos . y , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer )  ~ [41]
[42] ~ use Function : usefunc : ChangeRenderData ( & RenderCoordy , _rdLine ( scpos . x , -1000 , scpos . x , 1000 , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer )  ~ [75]
[76] ~ use Function : usefunc : ReleaseRenderData ( coord_layer )  ~ [80]
BakeCode_ScanCodes...block__ : {
adsetvar: vec2f scpos = GetMousePos_Screen ( evt ) 
usefunc : ChangeRenderData ( & RenderCoordx , _rdLine ( -1000 , scpos . y , 1000 , scpos . y , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer ) 
usefunc : ChangeRenderData ( & RenderCoordy , _rdLine ( scpos . x , -1000 , scpos . x , 1000 , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer ) 
usefunc : ReleaseRenderData ( coord_layer ) 
closed_ : }
 ~ [89]
[90] ~ IF : if__sen : else if ( LBtnDown ( evt ) )  ~ [97]
[98] ~ blocks : start
[0] ~ add and set variable : adsetvar: vec2f objpos = GetMousePos_Object ( evt )  ~ [7]
[8] ~ add and set variable : adsetvar: int cline = ICBE_GetCurrentLine ( selectedICBE )  ~ [15]
[16] ~ use Function : usefunc : ICBE_InsertLine ( selectedICBE , cline )  ~ [22]
[23] ~ use Function : usefunc : ICBE_SelectLine ( selectedICBE , cline )  ~ [29]
[30] ~ use Function : usefunc : ICBE_AddString ( selectedICBE , "vec2f  = _vec2f(" )  ~ [36]
[37] ~ add and set variable : adsetvar: char [ 32 ] Xstr = FloatToString ( objpos . x , 32 )  ~ [51]
[52] ~ add and set variable : adsetvar: char [ 32 ] Ystr = FloatToString ( objpos . y , 32 )  ~ [66]
[67] ~ use Function : usefunc : ICBE_AddString ( selectedICBE , Xstr )  ~ [73]
[74] ~ use Function : usefunc : ICBE_AddString ( selectedICBE , ", " )  ~ [80]
[81] ~ use Function : usefunc : ICBE_AddString ( selectedICBE , Ystr )  ~ [87]
[88] ~ use Function : usefunc : ICBE_AddString ( selectedICBE , ");" )  ~ [94]
[95] ~ use Function : usefunc : ICBE_SelectCharIndex ( 6 )  ~ [99]
BakeCode_ScanCodes...block__ : {
adsetvar: vec2f objpos = GetMousePos_Object ( evt ) 
adsetvar: int cline = ICBE_GetCurrentLine ( selectedICBE ) 
usefunc : ICBE_InsertLine ( selectedICBE , cline ) 
usefunc : ICBE_SelectLine ( selectedICBE , cline ) 
usefunc : ICBE_AddString ( selectedICBE , "vec2f  = _vec2f(" ) 
adsetvar: char [ 32 ] Xstr = FloatToString ( objpos . x , 32 ) 
adsetvar: char [ 32 ] Ystr = FloatToString ( objpos . y , 32 ) 
usefunc : ICBE_AddString ( selectedICBE , Xstr ) 
usefunc : ICBE_AddString ( selectedICBE , ", " ) 
usefunc : ICBE_AddString ( selectedICBE , Ystr ) 
usefunc : ICBE_AddString ( selectedICBE , ");" ) 
usefunc : ICBE_SelectCharIndex ( 6 ) 
closed_ : }
 ~ [199]
BakeCode_ScanCodes...block__ : {
if__sen : if ( MouseMove ( evt ) ) 
block__ : {
adsetvar: vec2f scpos = GetMousePos_Screen ( evt ) 
usefunc : ChangeRenderData ( & RenderCoordx , _rdLine ( -1000 , scpos . y , 1000 , scpos . y , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer ) 
usefunc : ChangeRenderData ( & RenderCoordy , _rdLine ( scpos . x , -1000 , scpos . x , 1000 , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer ) 
usefunc : ReleaseRenderData ( coord_layer ) 
closed_ : }

if__sen : else if ( LBtnDown ( evt ) ) 
block__ : {
adsetvar: vec2f objpos = GetMousePos_Object ( evt ) 
adsetvar: int cline = ICBE_GetCurrentLine ( selectedICBE ) 
usefunc : ICBE_InsertLine ( selectedICBE , cline ) 
usefunc : ICBE_SelectLine ( selectedICBE , cline ) 
usefunc : ICBE_AddString ( selectedICBE , "vec2f  = _vec2f(" ) 
adsetvar: char [ 32 ] Xstr = FloatToString ( objpos . x , 32 ) 
adsetvar: char [ 32 ] Ystr = FloatToString ( objpos . y , 32 ) 
usefunc : ICBE_AddString ( selectedICBE , Xstr ) 
usefunc : ICBE_AddString ( selectedICBE , ", " ) 
usefunc : ICBE_AddString ( selectedICBE , Ystr ) 
usefunc : ICBE_AddString ( selectedICBE , ");" ) 
usefunc : ICBE_SelectCharIndex ( 6 ) 
closed_ : }

closed_ : }
 ~ [341]
[342] ~ add Function : addfunc : void AddVariableLineStateWork ( )  ~ [345]
[346] ~ blocks : start
BakeCode_ScanCodes...block__ : {
closed_ : }
 ~ [347]
[348] ~ add Function : addfunc : void AddVariableCircleStateWork ( )  ~ [351]
[352] ~ blocks : start
BakeCode_ScanCodes...block__ : {
closed_ : }
 ~ [353]
[354] ~ add Function : addfunc : void AddVariableStateWork ( )  ~ [357]
[358] ~ blocks : start
[0] ~ add and set variable : adsetvar: bool inb = true  ~ [4]
[5] ~  ~ [5]
[6] ~ set Variable : set_var : inb = inb || Add_Variable_VertexFlag  ~ [10]
[11] ~  ~ [11]
[12] ~ set Variable : set_var : inb = inb || Add_Variable_LineFlag  ~ [16]
[17] ~  ~ [17]
[18] ~ set Variable : set_var : inb = inb || Add_Variable_CircleFlag  ~ [22]
[23] ~ IF : if__sen : if ( inb == false )  ~ [28]
[29] ~ blocks : start
[0] ~ IF : if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' )  ~ [13]
[14] ~ blocks : start
[0] ~  ~ [0]
[1] ~ set Variable : set_var : Add_Variable_VertexFlag = true  ~ [3]
[4] ~  ~ [4]
[5] ~ set Variable : set_var : state_text_stringptr = "Command : Add_Variable_Vertex"  ~ [7]
BakeCode_ScanCodes...block__ : {
set_var : Add_Variable_VertexFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Vertex" 
closed_ : }
 ~ [23]
[24] ~ IF : if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'L' )  ~ [37]
[38] ~ blocks : start
[0] ~  ~ [0]
[1] ~ set Variable : set_var : Add_Variable_LineFlag = true  ~ [3]
[4] ~  ~ [4]
[5] ~ set Variable : set_var : state_text_stringptr = "Command : Add_Variable_Line"  ~ [7]
BakeCode_ScanCodes...block__ : {
set_var : Add_Variable_LineFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Line" 
closed_ : }
 ~ [47]
[48] ~ IF : if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'C' )  ~ [61]
[62] ~ blocks : start
[0] ~  ~ [0]
[1] ~ set Variable : set_var : Add_Variable_CircleFlag = true  ~ [3]
[4] ~  ~ [4]
[5] ~ set Variable : set_var : state_text_stringptr = "Command : Add_Variable_Circle"  ~ [7]
BakeCode_ScanCodes...block__ : {
set_var : Add_Variable_CircleFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Circle" 
closed_ : }
 ~ [71]
BakeCode_ScanCodes...block__ : {
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
block__ : {
set_var : Add_Variable_VertexFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Vertex" 
closed_ : }

if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'L' ) 
block__ : {
set_var : Add_Variable_LineFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Line" 
closed_ : }

if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'C' ) 
block__ : {
set_var : Add_Variable_CircleFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Circle" 
closed_ : }

closed_ : }
 ~ [102]
[103] ~ IF : if__sen : else  ~ [103]
[104] ~ blocks : start
[0] ~ IF : if__sen : if ( Add_Variable_VertexFlag )  ~ [3]
[4] ~ blocks : start
[0] ~ use Function : usefunc : AddVariableVertexStateWork ( )  ~ [3]
BakeCode_ScanCodes...block__ : {
usefunc : AddVariableVertexStateWork ( ) 
closed_ : }
 ~ [9]
[10] ~ IF : if__sen : else if ( Add_Variable_LineFlag )  ~ [14]
[15] ~ blocks : start
[0] ~ use Function : usefunc : AddVariableLineStateWork ( )  ~ [3]
BakeCode_ScanCodes...block__ : {
usefunc : AddVariableLineStateWork ( ) 
closed_ : }
 ~ [20]
[21] ~ IF : if__sen : else if ( Add_Variable_CircleFlag )  ~ [25]
[26] ~ blocks : start
[0] ~ use Function : usefunc : AddVariableCircleStateWork ( )  ~ [3]
BakeCode_ScanCodes...block__ : {
usefunc : AddVariableCircleStateWork ( ) 
closed_ : }
 ~ [31]
BakeCode_ScanCodes...block__ : {
if__sen : if ( Add_Variable_VertexFlag ) 
block__ : {
usefunc : AddVariableVertexStateWork ( ) 
closed_ : }

if__sen : else if ( Add_Variable_LineFlag ) 
block__ : {
usefunc : AddVariableLineStateWork ( ) 
closed_ : }

if__sen : else if ( Add_Variable_CircleFlag ) 
block__ : {
usefunc : AddVariableCircleStateWork ( ) 
closed_ : }

closed_ : }
 ~ [137]
BakeCode_ScanCodes...block__ : {
adsetvar: bool inb = true 
set_var : inb = inb || Add_Variable_VertexFlag 
set_var : inb = inb || Add_Variable_LineFlag 
set_var : inb = inb || Add_Variable_CircleFlag 
if__sen : if ( inb == false ) 
block__ : {
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
block__ : {
set_var : Add_Variable_VertexFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Vertex" 
closed_ : }

if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'L' ) 
block__ : {
set_var : Add_Variable_LineFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Line" 
closed_ : }

if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'C' ) 
block__ : {
set_var : Add_Variable_CircleFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Circle" 
closed_ : }

closed_ : }

if__sen : else 
block__ : {
if__sen : if ( Add_Variable_VertexFlag ) 
block__ : {
usefunc : AddVariableVertexStateWork ( ) 
closed_ : }

if__sen : else if ( Add_Variable_LineFlag ) 
block__ : {
usefunc : AddVariableLineStateWork ( ) 
closed_ : }

if__sen : else if ( Add_Variable_CircleFlag ) 
block__ : {
usefunc : AddVariableCircleStateWork ( ) 
closed_ : }

closed_ : }

closed_ : }
 ~ [497]
[498] ~ add Function : addfunc : void AddStateWork ( )  ~ [501]
[502] ~ blocks : start
[0] ~ IF : if__sen : if ( Add_VariableFlag == false && Add_FunctionFlag == false )  ~ [9]
[10] ~ blocks : start
[0] ~ IF : if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' )  ~ [13]
[14] ~ blocks : start
[0] ~  ~ [0]
[1] ~ set Variable : set_var : Add_VariableFlag = true  ~ [3]
[4] ~  ~ [4]
[5] ~ set Variable : set_var : state_text_stringptr = "Command : Add_Variable"  ~ [7]
BakeCode_ScanCodes...block__ : {
set_var : Add_VariableFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable" 
closed_ : }
 ~ [23]
[24] ~ IF : if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'F' )  ~ [37]
[38] ~ blocks : start
[0] ~  ~ [0]
[1] ~ set Variable : set_var : Add_FunctionFlag = true  ~ [3]
[4] ~  ~ [4]
[5] ~ set Variable : set_var : state_text_stringptr = "Command : Add_Function"  ~ [7]
BakeCode_ScanCodes...block__ : {
set_var : Add_FunctionFlag = true 
set_var : state_text_stringptr = "Command : Add_Function" 
closed_ : }
 ~ [47]
BakeCode_ScanCodes...block__ : {
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
block__ : {
set_var : Add_VariableFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable" 
closed_ : }

if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'F' ) 
block__ : {
set_var : Add_FunctionFlag = true 
set_var : state_text_stringptr = "Command : Add_Function" 
closed_ : }

closed_ : }
 ~ [59]
[60] ~ IF : if__sen : else if ( Add_VariableFlag )  ~ [64]
[65] ~ blocks : start
[0] ~ use Function : usefunc : AddVariableStateWork ( )  ~ [3]
BakeCode_ScanCodes...block__ : {
usefunc : AddVariableStateWork ( ) 
closed_ : }
 ~ [70]
[71] ~ IF : if__sen : else if ( Add_FunctionFlag )  ~ [75]
[76] ~ blocks : start
BakeCode_ScanCodes...block__ : {
closed_ : }
 ~ [77]
BakeCode_ScanCodes...block__ : {
if__sen : if ( Add_VariableFlag == false && Add_FunctionFlag == false ) 
block__ : {
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
block__ : {
set_var : Add_VariableFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable" 
closed_ : }

if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'F' ) 
block__ : {
set_var : Add_FunctionFlag = true 
set_var : state_text_stringptr = "Command : Add_Function" 
closed_ : }

closed_ : }

if__sen : else if ( Add_VariableFlag ) 
block__ : {
usefunc : AddVariableStateWork ( ) 
closed_ : }

if__sen : else if ( Add_FunctionFlag ) 
block__ : {
closed_ : }

closed_ : }
 ~ [581]
[582] ~ add Function : addfunc : void NoStateWork ( )  ~ [585]
[586] ~ blocks : start
[0] ~ IF : if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'A' )  ~ [13]
[14] ~ blocks : start
[0] ~  ~ [0]
[1] ~ set Variable : set_var : AddFlag = true  ~ [3]
[4] ~  ~ [4]
[5] ~ set Variable : set_var : state_text_stringptr = "Command : Add"  ~ [7]
BakeCode_ScanCodes...block__ : {
set_var : AddFlag = true 
set_var : state_text_stringptr = "Command : Add" 
closed_ : }
 ~ [23]
BakeCode_ScanCodes...block__ : {
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'A' ) 
block__ : {
set_var : AddFlag = true 
set_var : state_text_stringptr = "Command : Add" 
closed_ : }

closed_ : }
 ~ [611]
[612] ~ add Function : addfunc : void StateWork ( )  ~ [615]
[616] ~ blocks : start
[0] ~ IF : if__sen : if ( AddFlag == false )  ~ [5]
[6] ~ blocks : start
[0] ~ use Function : usefunc : NoStateWork ( )  ~ [3]
BakeCode_ScanCodes...block__ : {
usefunc : NoStateWork ( ) 
closed_ : }
 ~ [11]
[12] ~ IF : if__sen : else  ~ [12]
[13] ~ blocks : start
[0] ~ use Function : usefunc : AddStateWork ( )  ~ [3]
BakeCode_ScanCodes...block__ : {
usefunc : AddStateWork ( ) 
closed_ : }
 ~ [18]
BakeCode_ScanCodes...block__ : {
if__sen : if ( AddFlag == false ) 
block__ : {
usefunc : NoStateWork ( ) 
closed_ : }

if__sen : else 
block__ : {
usefunc : AddStateWork ( ) 
closed_ : }

closed_ : }
 ~ [636]
[637] ~ addfunction : addfunc : int main ( )  ~ [640]
[641] ~ blocks : start
[0] ~ while : while__ : while ( true )  ~ [3]
[4] ~ blocks : start
[0] ~  ~ [0]
[1] ~ set Variable : set_var : evt = GetMessage ( )  ~ [5]
[6] ~ use Function : usefunc : StateWork ( )  ~ [9]
[10] ~ use Function : usefunc : ChangeRenderData ( & RenderText_AddState , _rdText ( stloc . fp . x , stloc . fp . y , stloc . lp . x , stloc . lp . y , state_text_stringptr , state_text_color , 20 ) , state_text_layer )  ~ [50]
[51] ~ use Function : usefunc : ReleaseRenderData ( state_text_layer )  ~ [55]
BakeCode_ScanCodes...block__ : {
set_var : evt = GetMessage ( ) 
usefunc : StateWork ( ) 
usefunc : ChangeRenderData ( & RenderText_AddState , _rdText ( stloc . fp . x , stloc . fp . y , stloc . lp . x , stloc . lp . y , state_text_stringptr , state_text_color , 20 ) , state_text_layer ) 
usefunc : ReleaseRenderData ( state_text_layer ) 
closed_ : }
 ~ [61]
BakeCode_ScanCodes...block__ : {
while__ : while ( true ) 
block__ : {
set_var : evt = GetMessage ( ) 
usefunc : StateWork ( ) 
usefunc : ChangeRenderData ( & RenderText_AddState , _rdText ( stloc . fp . x , stloc . fp . y , stloc . lp . x , stloc . lp . y , state_text_stringptr , state_text_color , 20 ) , state_text_layer ) 
usefunc : ReleaseRenderData ( state_text_layer ) 
closed_ : }

closed_ : }
 ~ [704]
BakeCode_ScanCodes...finish
ICB[000002A3FA7C4E10] BakeCode_GlobalMemoryInit...finish
ICB[000002A3FA7C4E10] BakeCode_CompileCodes...start
add_var : pEventSystem evtsys 
BakeCode_CompileCodes__add_var : pEventSystem evtsys 
add_var : pPostRenderTarget prt 
BakeCode_CompileCodes__add_var : pPostRenderTarget prt 
add_var : pICBEditor selectedICBE 
BakeCode_CompileCodes__add_var : pICBEditor selectedICBE 
add_var : EventData evt 
BakeCode_CompileCodes__add_var : EventData evt 
adsetvar: gcolor state_text_color = _gcolor ( 255 , 255 , 255 , 255 ) 
BakeCode_CompileCodes__adsetvar: gcolor state_text_color = _gcolor ( 255 , 255 , 255 , 255 ) 
6	:FUNC(153)
7	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
12	:PARAM_1(154)
13	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
18	:PARAM_1(154)
19	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
24	:PARAM_1(154)
25	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
30	:PARAM_1(154)
31	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 5(5, 0, 0, 0)
40	:A=&Global_VID(178) > 36(36, 0, 0, 0)
45	:LA=A(161)
46	:*LA=*A_N(182) > 16(16, 0, 0, 0)
adsetvar: rect4f stloc = _rect4f ( -1000 , 0 , 0 , 50 ) 
BakeCode_CompileCodes__adsetvar: rect4f stloc = _rect4f ( -1000 , 0 , 0 , 50 ) 
51	:FUNC(153)
52	:PUSH_A_CONST_4(6) > 50(50, 0, 0, 0)
57	:CASTING_A(163) > 12
59	:PARAM_4(156)
60	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
65	:CASTING_A(163) > 12
67	:PARAM_4(156)
68	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
73	:CASTING_A(163) > 12
75	:PARAM_4(156)
76	:PUSH_A_CONST_4(6) > -1000(24, 252, 255, 255)
81	:CASTING_A(163) > 12
83	:PARAM_4(156)
84	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 5(5, 0, 0, 0)
93	:A=&Global_VID(178) > 52(52, 0, 0, 0)
98	:LA=A(161)
99	:*LA=*A_N(182) > 16(16, 0, 0, 0)
adsetvar: char * state_text_stringptr = "blank state" 
BakeCode_CompileCodes__adsetvar: char * state_text_stringptr = "blank state" 
104	:SET_A_CONST_STRING(172) > 12(12, 0, 0, 0)"blank state"
121	:A=&Global_VID(178) > 68(68, 0, 0, 0)
126	:LA=A(161)
127	:*LA=A_8(186)
adsetvar: bool AddFlag = false 
BakeCode_CompileCodes__adsetvar: bool AddFlag = false 
128	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
133	:A=&Global_VID(178) > 76(76, 0, 0, 0)
138	:LA=A(161)
139	:*LA=A_1(169)
adsetvar: bool Add_VariableFlag = false 
BakeCode_CompileCodes__adsetvar: bool Add_VariableFlag = false 
140	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
145	:A=&Global_VID(178) > 77(77, 0, 0, 0)
150	:LA=A(161)
151	:*LA=A_1(169)
adsetvar: bool Add_FunctionFlag = false 
BakeCode_CompileCodes__adsetvar: bool Add_FunctionFlag = false 
152	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
157	:A=&Global_VID(178) > 78(78, 0, 0, 0)
162	:LA=A(161)
163	:*LA=A_1(169)
adsetvar: bool Add_Variable_VertexFlag = false 
BakeCode_CompileCodes__adsetvar: bool Add_Variable_VertexFlag = false 
164	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
169	:A=&Global_VID(178) > 79(79, 0, 0, 0)
174	:LA=A(161)
175	:*LA=A_1(169)
adsetvar: bool Add_Variable_LineFlag = false 
BakeCode_CompileCodes__adsetvar: bool Add_Variable_LineFlag = false 
176	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
181	:A=&Global_VID(178) > 80(80, 0, 0, 0)
186	:LA=A(161)
187	:*LA=A_1(169)
adsetvar: bool Add_Variable_CircleFlag = false 
BakeCode_CompileCodes__adsetvar: bool Add_Variable_CircleFlag = false 
188	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
193	:A=&Global_VID(178) > 81(81, 0, 0, 0)
198	:LA=A(161)
199	:*LA=A_1(169)
adsetvar: pRenderData RenderText_AddState = 0 
BakeCode_CompileCodes__adsetvar: pRenderData RenderText_AddState = 0 
200	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
205	:A=&Global_VID(178) > 82(82, 0, 0, 0)
210	:LA=A(161)
211	:*LA=A_8(186)
adsetvar: int state_text_layer = 0 
BakeCode_CompileCodes__adsetvar: int state_text_layer = 0 
212	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
217	:A=&Global_VID(178) > 90(90, 0, 0, 0)
222	:LA=A(161)
223	:*LA=A_4(171)
adsetvar: pRenderData RenderCoordx = 0 
BakeCode_CompileCodes__adsetvar: pRenderData RenderCoordx = 0 
224	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
229	:A=&Global_VID(178) > 94(94, 0, 0, 0)
234	:LA=A(161)
235	:*LA=A_8(186)
adsetvar: pRenderData RenderCoordy = 0 
BakeCode_CompileCodes__adsetvar: pRenderData RenderCoordy = 0 
236	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
241	:A=&Global_VID(178) > 102(102, 0, 0, 0)
246	:LA=A(161)
247	:*LA=A_8(186)
adsetvar: int coord_layer = 1 
BakeCode_CompileCodes__adsetvar: int coord_layer = 1 
248	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
253	:A=&Global_VID(178) > 110(110, 0, 0, 0)
258	:LA=A(161)
259	:*LA=A_4(171)
addfunc : EventData GetMessage ( ) 
BakeCode_CompileCodes__addfunc : EventData GetMessage ( ) 
block__ : {
while__ : while ( 1 ) 
block__ : {
set_var : evt = PopEvent ( evtsys ) 
if__sen : if ( evt . message != 0 ) 
block__ : {
return_ : return evt 
closed_ : }

closed_ : }

closed_ : }

BakeCode_CompileCodes Block Start {
while__ : while ( 1 ) 
BakeCode_CompileCodes__while__ : while ( 1 ) 
260	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
265	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
set_var : evt = PopEvent ( evtsys ) 
if__sen : if ( evt . message != 0 ) 
block__ : {
return_ : return evt 
closed_ : }

closed_ : }

BakeCode_CompileCodes Block Start {
set_var : evt = PopEvent ( evtsys ) 
BakeCode_CompileCodes__set_var : evt = PopEvent ( evtsys ) 
270	:FUNC(153)
271	:A=&Global_VID(178) > 0(0, 0, 0, 0)
276	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
281	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 0(0, 0, 0, 0)
290	:A=&Global_VID(178) > 24(24, 0, 0, 0)
295	:LA=A(161)
296	:*LA=*A_N(182) > 12(12, 0, 0, 0)
if__sen : if ( evt . message != 0 ) 
BakeCode_CompileCodes__if__sen : if ( evt . message != 0 ) 
if ( evt . message != 0 ) 
evt . message != 0 
301	:A=&Global_VID(178) > 24(24, 0, 0, 0)
306	:PUSH_B_CONST_4(12) > 0(0, 0, 0, 0)
311	:AU_INT_ADD_A(25)
312	:A=*A_nopush(165)
313	:PUSH_B_CONST_4(12) > 0(0, 0, 0, 0)
318	:CM_BOOL_NOTSAME_A(93)
319	:POP_B(175)
320	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
return_ : return evt 
closed_ : }

BakeCode_CompileCodes Block Start {
return_ : return evt 
BakeCode_CompileCodes__return_ : return evt 
325	:A=&Global_VID(178) > 24(24, 0, 0, 0)
330	:RETURN(157)
}; BakeCode_CompileCodes Block Finish
}; BakeCode_CompileCodes Block Finish
}; BakeCode_CompileCodes Block Finish
addfunc : void AddVariableVertexStateWork ( ) 
BakeCode_CompileCodes__addfunc : void AddVariableVertexStateWork ( ) 
block__ : {
if__sen : if ( MouseMove ( evt ) ) 
block__ : {
adsetvar: vec2f scpos = GetMousePos_Screen ( evt ) 
usefunc : ChangeRenderData ( & RenderCoordx , _rdLine ( -1000 , scpos . y , 1000 , scpos . y , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer ) 
usefunc : ChangeRenderData ( & RenderCoordy , _rdLine ( scpos . x , -1000 , scpos . x , 1000 , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer ) 
usefunc : ReleaseRenderData ( coord_layer ) 
closed_ : }

if__sen : else if ( LBtnDown ( evt ) ) 
block__ : {
adsetvar: vec2f objpos = GetMousePos_Object ( evt ) 
adsetvar: int cline = ICBE_GetCurrentLine ( selectedICBE ) 
usefunc : ICBE_InsertLine ( selectedICBE , cline ) 
usefunc : ICBE_SelectLine ( selectedICBE , cline ) 
usefunc : ICBE_AddString ( selectedICBE , "vec2f  = _vec2f(" ) 
adsetvar: char [ 32 ] Xstr = FloatToString ( objpos . x , 32 ) 
adsetvar: char [ 32 ] Ystr = FloatToString ( objpos . y , 32 ) 
usefunc : ICBE_AddString ( selectedICBE , Xstr ) 
usefunc : ICBE_AddString ( selectedICBE , ", " ) 
usefunc : ICBE_AddString ( selectedICBE , Ystr ) 
usefunc : ICBE_AddString ( selectedICBE , ");" ) 
usefunc : ICBE_SelectCharIndex ( 6 ) 
closed_ : }

closed_ : }

BakeCode_CompileCodes Block Start {
if__sen : if ( MouseMove ( evt ) ) 
BakeCode_CompileCodes__if__sen : if ( MouseMove ( evt ) ) 
if ( MouseMove ( evt ) ) 
MouseMove ( evt ) 
337	:FUNC(153)
338	:A=&Global_VID(178) > 24(24, 0, 0, 0)
343	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
348	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 5(5, 0, 0, 0)
357	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
adsetvar: vec2f scpos = GetMousePos_Screen ( evt ) 
usefunc : ChangeRenderData ( & RenderCoordx , _rdLine ( -1000 , scpos . y , 1000 , scpos . y , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer ) 
usefunc : ChangeRenderData ( & RenderCoordy , _rdLine ( scpos . x , -1000 , scpos . x , 1000 , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer ) 
usefunc : ReleaseRenderData ( coord_layer ) 
closed_ : }

BakeCode_CompileCodes Block Start {
adsetvar: vec2f scpos = GetMousePos_Screen ( evt ) 
BakeCode_CompileCodes__adsetvar: vec2f scpos = GetMousePos_Screen ( evt ) 
362	:ADD_STACK_VARIABLE(0) > 8(8, 0, 0, 0)
367	:FUNC(153)
368	:A=&Global_VID(178) > 24(24, 0, 0, 0)
373	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
378	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 8(8, 0, 0, 0)
387	:A=&VID(159) > 8(8, 0, 0, 0)
392	:LA=A(161)
393	:*LA=A_8(186)
usefunc : ChangeRenderData ( & RenderCoordx , _rdLine ( -1000 , scpos . y , 1000 , scpos . y , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer ) 
BakeCode_CompileCodes__usefunc : ChangeRenderData ( & RenderCoordx , _rdLine ( -1000 , scpos . y , 1000 , scpos . y , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer ) 
394	:FUNC(153)
395	:A=&Global_VID(178) > 110(110, 0, 0, 0)
400	:A=*A_nopush(165)
401	:PARAM_4(156)
402	:FUNC(153)
403	:FUNC(153)
404	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
409	:PARAM_1(154)
410	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
415	:PARAM_1(154)
416	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
421	:PARAM_1(154)
422	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
427	:PARAM_1(154)
428	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 5(5, 0, 0, 0)
437	:PARAM_N_COPY_BY_ADDRESS(177) > 16(16, 0, 0, 0)
442	:A<=&VID[Const](183) > 8(8, 0, 0, 0) > 4(4, 0, 0, 0)
451	:A=*A_nopush(165)
452	:PARAM_4(156)
453	:PUSH_A_CONST_4(6) > 1000(232, 3, 0, 0)
458	:CASTING_A(163) > 12
460	:PARAM_4(156)
461	:A<=&VID[Const](183) > 8(8, 0, 0, 0) > 4(4, 0, 0, 0)
470	:A=*A_nopush(165)
471	:PARAM_4(156)
472	:PUSH_A_CONST_4(6) > -1000(24, 252, 255, 255)
477	:CASTING_A(163) > 12
479	:PARAM_4(156)
480	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 13(13, 0, 0, 0)
489	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
494	:A=&Global_VID(178) > 94(94, 0, 0, 0)
499	:PARAM_8(185)
500	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 17(17, 0, 0, 0)
usefunc : ChangeRenderData ( & RenderCoordy , _rdLine ( scpos . x , -1000 , scpos . x , 1000 , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer ) 
BakeCode_CompileCodes__usefunc : ChangeRenderData ( & RenderCoordy , _rdLine ( scpos . x , -1000 , scpos . x , 1000 , _gcolor ( 255 , 255 , 255 , 255 ) ) , coord_layer ) 
509	:FUNC(153)
510	:A=&Global_VID(178) > 110(110, 0, 0, 0)
515	:A=*A_nopush(165)
516	:PARAM_4(156)
517	:FUNC(153)
518	:FUNC(153)
519	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
524	:PARAM_1(154)
525	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
530	:PARAM_1(154)
531	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
536	:PARAM_1(154)
537	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
542	:PARAM_1(154)
543	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 5(5, 0, 0, 0)
552	:PARAM_N_COPY_BY_ADDRESS(177) > 16(16, 0, 0, 0)
557	:PUSH_A_CONST_4(6) > 1000(232, 3, 0, 0)
562	:CASTING_A(163) > 12
564	:PARAM_4(156)
565	:A<=&VID[Const](183) > 8(8, 0, 0, 0) > 0(0, 0, 0, 0)
574	:A=*A_nopush(165)
575	:PARAM_4(156)
576	:PUSH_A_CONST_4(6) > -1000(24, 252, 255, 255)
581	:CASTING_A(163) > 12
583	:PARAM_4(156)
584	:A<=&VID[Const](183) > 8(8, 0, 0, 0) > 0(0, 0, 0, 0)
593	:A=*A_nopush(165)
594	:PARAM_4(156)
595	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 13(13, 0, 0, 0)
604	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
609	:A=&Global_VID(178) > 102(102, 0, 0, 0)
614	:PARAM_8(185)
615	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 17(17, 0, 0, 0)
usefunc : ReleaseRenderData ( coord_layer ) 
BakeCode_CompileCodes__usefunc : ReleaseRenderData ( coord_layer ) 
624	:FUNC(153)
625	:A=&Global_VID(178) > 110(110, 0, 0, 0)
630	:A=*A_nopush(165)
631	:PARAM_4(156)
632	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 18(18, 0, 0, 0)
}; BakeCode_CompileCodes Block Finish
if__sen : else if ( LBtnDown ( evt ) ) 
BakeCode_CompileCodes__if__sen : else if ( LBtnDown ( evt ) ) 
else if ( LBtnDown ( evt ) ) 
LBtnDown ( evt ) 
646	:FUNC(153)
647	:A=&Global_VID(178) > 24(24, 0, 0, 0)
652	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
657	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 1(1, 0, 0, 0)
666	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
adsetvar: vec2f objpos = GetMousePos_Object ( evt ) 
adsetvar: int cline = ICBE_GetCurrentLine ( selectedICBE ) 
usefunc : ICBE_InsertLine ( selectedICBE , cline ) 
usefunc : ICBE_SelectLine ( selectedICBE , cline ) 
usefunc : ICBE_AddString ( selectedICBE , "vec2f  = _vec2f(" ) 
adsetvar: char [ 32 ] Xstr = FloatToString ( objpos . x , 32 ) 
adsetvar: char [ 32 ] Ystr = FloatToString ( objpos . y , 32 ) 
usefunc : ICBE_AddString ( selectedICBE , Xstr ) 
usefunc : ICBE_AddString ( selectedICBE , ", " ) 
usefunc : ICBE_AddString ( selectedICBE , Ystr ) 
usefunc : ICBE_AddString ( selectedICBE , ");" ) 
usefunc : ICBE_SelectCharIndex ( 6 ) 
closed_ : }

BakeCode_CompileCodes Block Start {
adsetvar: vec2f objpos = GetMousePos_Object ( evt ) 
BakeCode_CompileCodes__adsetvar: vec2f objpos = GetMousePos_Object ( evt ) 
671	:ADD_STACK_VARIABLE(0) > 8(8, 0, 0, 0)
676	:FUNC(153)
677	:A=&Global_VID(178) > 24(24, 0, 0, 0)
682	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
687	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 9(9, 0, 0, 0)
696	:A=&VID(159) > 8(8, 0, 0, 0)
701	:LA=A(161)
702	:*LA=A_8(186)
adsetvar: int cline = ICBE_GetCurrentLine ( selectedICBE ) 
BakeCode_CompileCodes__adsetvar: int cline = ICBE_GetCurrentLine ( selectedICBE ) 
703	:ADD_STACK_VARIABLE(0) > 12(12, 0, 0, 0)
708	:FUNC(153)
709	:A=&Global_VID(178) > 16(16, 0, 0, 0)
714	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
719	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 24(24, 0, 0, 0)
728	:A=&VID(159) > 12(12, 0, 0, 0)
733	:LA=A(161)
734	:*LA=A_4(171)
usefunc : ICBE_InsertLine ( selectedICBE , cline ) 
BakeCode_CompileCodes__usefunc : ICBE_InsertLine ( selectedICBE , cline ) 
735	:FUNC(153)
736	:A=&VID(159) > 12(12, 0, 0, 0)
741	:A=*A_nopush(165)
742	:PARAM_4(156)
743	:A=&Global_VID(178) > 16(16, 0, 0, 0)
748	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
753	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 22(22, 0, 0, 0)
usefunc : ICBE_SelectLine ( selectedICBE , cline ) 
BakeCode_CompileCodes__usefunc : ICBE_SelectLine ( selectedICBE , cline ) 
762	:FUNC(153)
763	:A=&VID(159) > 12(12, 0, 0, 0)
768	:A=*A_nopush(165)
769	:PARAM_4(156)
770	:A=&Global_VID(178) > 16(16, 0, 0, 0)
775	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
780	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 20(20, 0, 0, 0)
usefunc : ICBE_AddString ( selectedICBE , "vec2f  = _vec2f(" ) 
BakeCode_CompileCodes__usefunc : ICBE_AddString ( selectedICBE , "vec2f  = _vec2f(" ) 
789	:FUNC(153)
790	:SET_A_CONST_STRING(172) > 17(17, 0, 0, 0)"vec2f  = _vec2f("
812	:PARAM_8(185)
813	:A=&Global_VID(178) > 16(16, 0, 0, 0)
818	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
823	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 23(23, 0, 0, 0)
adsetvar: char [ 32 ] Xstr = FloatToString ( objpos . x , 32 ) 
BakeCode_CompileCodes__adsetvar: char [ 32 ] Xstr = FloatToString ( objpos . x , 32 ) 
832	:ADD_STACK_VARIABLE(0) > 44(44, 0, 0, 0)
837	:FUNC(153)
838	:PUSH_A_CONST_4(6) > 32(32, 0, 0, 0)
843	:PARAM_4(156)
844	:A<=&VID[Const](183) > 8(8, 0, 0, 0) > 0(0, 0, 0, 0)
853	:A=*A_nopush(165)
854	:PARAM_4(156)
855	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 25(25, 0, 0, 0)
864	:A=&VID(159) > 44(44, 0, 0, 0)
869	:LA=A(161)
870	:*LA=*A_N(182) > 32(32, 0, 0, 0)
adsetvar: char [ 32 ] Ystr = FloatToString ( objpos . y , 32 ) 
BakeCode_CompileCodes__adsetvar: char [ 32 ] Ystr = FloatToString ( objpos . y , 32 ) 
875	:ADD_STACK_VARIABLE(0) > 76(76, 0, 0, 0)
880	:FUNC(153)
881	:PUSH_A_CONST_4(6) > 32(32, 0, 0, 0)
886	:PARAM_4(156)
887	:A<=&VID[Const](183) > 8(8, 0, 0, 0) > 4(4, 0, 0, 0)
896	:A=*A_nopush(165)
897	:PARAM_4(156)
898	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 25(25, 0, 0, 0)
907	:A=&VID(159) > 76(76, 0, 0, 0)
912	:LA=A(161)
913	:*LA=*A_N(182) > 32(32, 0, 0, 0)
usefunc : ICBE_AddString ( selectedICBE , Xstr ) 
BakeCode_CompileCodes__usefunc : ICBE_AddString ( selectedICBE , Xstr ) 
918	:FUNC(153)
919	:A=&VID(159) > 44(44, 0, 0, 0)
924	:A=*A_nopush(165)
925	:PARAM_8(185)
926	:A=&Global_VID(178) > 16(16, 0, 0, 0)
931	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
936	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 23(23, 0, 0, 0)
usefunc : ICBE_AddString ( selectedICBE , ", " ) 
BakeCode_CompileCodes__usefunc : ICBE_AddString ( selectedICBE , ", " ) 
945	:FUNC(153)
946	:SET_A_CONST_STRING(172) > 3(3, 0, 0, 0)", "
954	:PARAM_8(185)
955	:A=&Global_VID(178) > 16(16, 0, 0, 0)
960	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
965	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 23(23, 0, 0, 0)
usefunc : ICBE_AddString ( selectedICBE , Ystr ) 
BakeCode_CompileCodes__usefunc : ICBE_AddString ( selectedICBE , Ystr ) 
974	:FUNC(153)
975	:A=&VID(159) > 76(76, 0, 0, 0)
980	:A=*A_nopush(165)
981	:PARAM_8(185)
982	:A=&Global_VID(178) > 16(16, 0, 0, 0)
987	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
992	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 23(23, 0, 0, 0)
usefunc : ICBE_AddString ( selectedICBE , ");" ) 
BakeCode_CompileCodes__usefunc : ICBE_AddString ( selectedICBE , ");" ) 
1001	:FUNC(153)
1002	:SET_A_CONST_STRING(172) > 3(3, 0, 0, 0)");"
1010	:PARAM_8(185)
1011	:A=&Global_VID(178) > 16(16, 0, 0, 0)
1016	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1021	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 23(23, 0, 0, 0)
usefunc : ICBE_SelectCharIndex ( 6 ) 
BakeCode_CompileCodes__usefunc : ICBE_SelectCharIndex ( 6 ) 
1030	:FUNC(153)
1031	:PUSH_A_CONST_4(6) > 6(6, 0, 0, 0)
1036	:PARAM_4(156)
1037	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 21(21, 0, 0, 0)
}; BakeCode_CompileCodes Block Finish
}; BakeCode_CompileCodes Block Finish
addfunc : void AddVariableLineStateWork ( ) 
BakeCode_CompileCodes__addfunc : void AddVariableLineStateWork ( ) 
block__ : {
closed_ : }

BakeCode_CompileCodes Block Start {
}; BakeCode_CompileCodes Block Finish
addfunc : void AddVariableCircleStateWork ( ) 
BakeCode_CompileCodes__addfunc : void AddVariableCircleStateWork ( ) 
block__ : {
closed_ : }

BakeCode_CompileCodes Block Start {
}; BakeCode_CompileCodes Block Finish
addfunc : void AddVariableStateWork ( ) 
BakeCode_CompileCodes__addfunc : void AddVariableStateWork ( ) 
block__ : {
adsetvar: bool inb = true 
set_var : inb = inb || Add_Variable_VertexFlag 
set_var : inb = inb || Add_Variable_LineFlag 
set_var : inb = inb || Add_Variable_CircleFlag 
if__sen : if ( inb == false ) 
block__ : {
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
block__ : {
set_var : Add_Variable_VertexFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Vertex" 
closed_ : }

if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'L' ) 
block__ : {
set_var : Add_Variable_LineFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Line" 
closed_ : }

if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'C' ) 
block__ : {
set_var : Add_Variable_CircleFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Circle" 
closed_ : }

closed_ : }

if__sen : else 
block__ : {
if__sen : if ( Add_Variable_VertexFlag ) 
block__ : {
usefunc : AddVariableVertexStateWork ( ) 
closed_ : }

if__sen : else if ( Add_Variable_LineFlag ) 
block__ : {
usefunc : AddVariableLineStateWork ( ) 
closed_ : }

if__sen : else if ( Add_Variable_CircleFlag ) 
block__ : {
usefunc : AddVariableCircleStateWork ( ) 
closed_ : }

closed_ : }

closed_ : }

BakeCode_CompileCodes Block Start {
adsetvar: bool inb = true 
BakeCode_CompileCodes__adsetvar: bool inb = true 
1054	:ADD_STACK_VARIABLE(0) > 1(1, 0, 0, 0)
1059	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
1064	:A=&VID(159) > 1(1, 0, 0, 0)
1069	:LA=A(161)
1070	:*LA=A_1(169)
set_var : inb = inb || Add_Variable_VertexFlag 
BakeCode_CompileCodes__set_var : inb = inb || Add_Variable_VertexFlag 
1071	:A=&VID(159) > 1(1, 0, 0, 0)
1076	:A=*A_nopush(165)
1077	:B=&Global_VID(179) > 79(79, 0, 0, 0)
1082	:B=*B_nopush(166)
1083	:LU_BOOL_OR_A(87)
1084	:A=&VID(159) > 1(1, 0, 0, 0)
1089	:LA=A(161)
1090	:*LA=A_1(169)
set_var : inb = inb || Add_Variable_LineFlag 
BakeCode_CompileCodes__set_var : inb = inb || Add_Variable_LineFlag 
1091	:A=&VID(159) > 1(1, 0, 0, 0)
1096	:A=*A_nopush(165)
1097	:B=&Global_VID(179) > 80(80, 0, 0, 0)
1102	:B=*B_nopush(166)
1103	:LU_BOOL_OR_A(87)
1104	:A=&VID(159) > 1(1, 0, 0, 0)
1109	:LA=A(161)
1110	:*LA=A_1(169)
set_var : inb = inb || Add_Variable_CircleFlag 
BakeCode_CompileCodes__set_var : inb = inb || Add_Variable_CircleFlag 
1111	:A=&VID(159) > 1(1, 0, 0, 0)
1116	:A=*A_nopush(165)
1117	:B=&Global_VID(179) > 81(81, 0, 0, 0)
1122	:B=*B_nopush(166)
1123	:LU_BOOL_OR_A(87)
1124	:A=&VID(159) > 1(1, 0, 0, 0)
1129	:LA=A(161)
1130	:*LA=A_1(169)
if__sen : if ( inb == false ) 
BakeCode_CompileCodes__if__sen : if ( inb == false ) 
if ( inb == false ) 
inb == false 
1131	:A=&VID(159) > 1(1, 0, 0, 0)
1136	:A=*A_nopush(165)
1137	:PUSH_B_CONST_4(12) > 0(0, 0, 0, 0)
1142	:CM_BOOL_SAME_A(91)
1143	:POP_B(175)
1144	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
block__ : {
set_var : Add_Variable_VertexFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Vertex" 
closed_ : }

if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'L' ) 
block__ : {
set_var : Add_Variable_LineFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Line" 
closed_ : }

if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'C' ) 
block__ : {
set_var : Add_Variable_CircleFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Circle" 
closed_ : }

closed_ : }

BakeCode_CompileCodes Block Start {
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
BakeCode_CompileCodes__if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
KeyDown ( evt ) && getEventKey ( evt ) == 'V' 
1149	:FUNC(153)
1150	:A=&Global_VID(178) > 24(24, 0, 0, 0)
1155	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1160	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 6(6, 0, 0, 0)
1169	:FUNC(153)
1170	:A=&Global_VID(178) > 24(24, 0, 0, 0)
1175	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1180	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 12(12, 0, 0, 0)
1189	:PUSH_B_CONST_1(10) > 86
1191	:CASTING_B(164) > 2
1193	:CM_BOOL_SAME_A(91)
1194	:POP_B(175)
1195	:B=A(181)
1196	:POP_A(174)
1197	:LU_BOOL_AND_A(85)
1198	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
set_var : Add_Variable_VertexFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Vertex" 
closed_ : }

BakeCode_CompileCodes Block Start {
set_var : Add_Variable_VertexFlag = true 
BakeCode_CompileCodes__set_var : Add_Variable_VertexFlag = true 
1203	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
1208	:A=&Global_VID(178) > 79(79, 0, 0, 0)
1213	:LA=A(161)
1214	:*LA=A_1(169)
set_var : state_text_stringptr = "Command : Add_Variable_Vertex" 
BakeCode_CompileCodes__set_var : state_text_stringptr = "Command : Add_Variable_Vertex" 
1215	:SET_A_CONST_STRING(172) > 30(30, 0, 0, 0)"Command : Add_Variable_Vertex"
1250	:A=&Global_VID(178) > 68(68, 0, 0, 0)
1255	:LA=A(161)
1256	:*LA=A_8(186)
}; BakeCode_CompileCodes Block Finish
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'L' ) 
BakeCode_CompileCodes__if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'L' ) 
if ( KeyDown ( evt ) && getEventKey ( evt ) == 'L' ) 
KeyDown ( evt ) && getEventKey ( evt ) == 'L' 
1257	:FUNC(153)
1258	:A=&Global_VID(178) > 24(24, 0, 0, 0)
1263	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1268	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 6(6, 0, 0, 0)
1277	:FUNC(153)
1278	:A=&Global_VID(178) > 24(24, 0, 0, 0)
1283	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1288	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 12(12, 0, 0, 0)
1297	:PUSH_B_CONST_1(10) > 76
1299	:CASTING_B(164) > 2
1301	:CM_BOOL_SAME_A(91)
1302	:POP_B(175)
1303	:B=A(181)
1304	:POP_A(174)
1305	:LU_BOOL_AND_A(85)
1306	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
set_var : Add_Variable_LineFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Line" 
closed_ : }

BakeCode_CompileCodes Block Start {
set_var : Add_Variable_LineFlag = true 
BakeCode_CompileCodes__set_var : Add_Variable_LineFlag = true 
1311	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
1316	:A=&Global_VID(178) > 80(80, 0, 0, 0)
1321	:LA=A(161)
1322	:*LA=A_1(169)
set_var : state_text_stringptr = "Command : Add_Variable_Line" 
BakeCode_CompileCodes__set_var : state_text_stringptr = "Command : Add_Variable_Line" 
1323	:SET_A_CONST_STRING(172) > 28(28, 0, 0, 0)"Command : Add_Variable_Line"
1356	:A=&Global_VID(178) > 68(68, 0, 0, 0)
1361	:LA=A(161)
1362	:*LA=A_8(186)
}; BakeCode_CompileCodes Block Finish
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'C' ) 
BakeCode_CompileCodes__if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'C' ) 
if ( KeyDown ( evt ) && getEventKey ( evt ) == 'C' ) 
KeyDown ( evt ) && getEventKey ( evt ) == 'C' 
1363	:FUNC(153)
1364	:A=&Global_VID(178) > 24(24, 0, 0, 0)
1369	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1374	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 6(6, 0, 0, 0)
1383	:FUNC(153)
1384	:A=&Global_VID(178) > 24(24, 0, 0, 0)
1389	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1394	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 12(12, 0, 0, 0)
1403	:PUSH_B_CONST_1(10) > 67
1405	:CASTING_B(164) > 2
1407	:CM_BOOL_SAME_A(91)
1408	:POP_B(175)
1409	:B=A(181)
1410	:POP_A(174)
1411	:LU_BOOL_AND_A(85)
1412	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
set_var : Add_Variable_CircleFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable_Circle" 
closed_ : }

BakeCode_CompileCodes Block Start {
set_var : Add_Variable_CircleFlag = true 
BakeCode_CompileCodes__set_var : Add_Variable_CircleFlag = true 
1417	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
1422	:A=&Global_VID(178) > 81(81, 0, 0, 0)
1427	:LA=A(161)
1428	:*LA=A_1(169)
set_var : state_text_stringptr = "Command : Add_Variable_Circle" 
BakeCode_CompileCodes__set_var : state_text_stringptr = "Command : Add_Variable_Circle" 
1429	:SET_A_CONST_STRING(172) > 30(30, 0, 0, 0)"Command : Add_Variable_Circle"
1464	:A=&Global_VID(178) > 68(68, 0, 0, 0)
1469	:LA=A(161)
1470	:*LA=A_8(186)
}; BakeCode_CompileCodes Block Finish
}; BakeCode_CompileCodes Block Finish
if__sen : else 
BakeCode_CompileCodes__if__sen : else 
else 
block__ : {
if__sen : if ( Add_Variable_VertexFlag ) 
block__ : {
usefunc : AddVariableVertexStateWork ( ) 
closed_ : }

if__sen : else if ( Add_Variable_LineFlag ) 
block__ : {
usefunc : AddVariableLineStateWork ( ) 
closed_ : }

if__sen : else if ( Add_Variable_CircleFlag ) 
block__ : {
usefunc : AddVariableCircleStateWork ( ) 
closed_ : }

closed_ : }

BakeCode_CompileCodes Block Start {
if__sen : if ( Add_Variable_VertexFlag ) 
BakeCode_CompileCodes__if__sen : if ( Add_Variable_VertexFlag ) 
if ( Add_Variable_VertexFlag ) 
Add_Variable_VertexFlag 
1476	:A=&Global_VID(178) > 79(79, 0, 0, 0)
1481	:A=*A_nopush(165)
1482	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
usefunc : AddVariableVertexStateWork ( ) 
closed_ : }

BakeCode_CompileCodes Block Start {
usefunc : AddVariableVertexStateWork ( ) 
BakeCode_CompileCodes__usefunc : AddVariableVertexStateWork ( ) 
1487	:FUNC(153)
1488	:FUNCJMP(162) > 337(81, 1, 0, 0)
}; BakeCode_CompileCodes Block Finish
if__sen : else if ( Add_Variable_LineFlag ) 
BakeCode_CompileCodes__if__sen : else if ( Add_Variable_LineFlag ) 
else if ( Add_Variable_LineFlag ) 
Add_Variable_LineFlag 
1498	:A=&Global_VID(178) > 80(80, 0, 0, 0)
1503	:A=*A_nopush(165)
1504	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
usefunc : AddVariableLineStateWork ( ) 
closed_ : }

BakeCode_CompileCodes Block Start {
usefunc : AddVariableLineStateWork ( ) 
BakeCode_CompileCodes__usefunc : AddVariableLineStateWork ( ) 
1509	:FUNC(153)
1510	:FUNCJMP(162) > 1052(28, 4, 0, 0)
}; BakeCode_CompileCodes Block Finish
if__sen : else if ( Add_Variable_CircleFlag ) 
BakeCode_CompileCodes__if__sen : else if ( Add_Variable_CircleFlag ) 
else if ( Add_Variable_CircleFlag ) 
Add_Variable_CircleFlag 
1520	:A=&Global_VID(178) > 81(81, 0, 0, 0)
1525	:A=*A_nopush(165)
1526	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
usefunc : AddVariableCircleStateWork ( ) 
closed_ : }

BakeCode_CompileCodes Block Start {
usefunc : AddVariableCircleStateWork ( ) 
BakeCode_CompileCodes__usefunc : AddVariableCircleStateWork ( ) 
1531	:FUNC(153)
1532	:FUNCJMP(162) > 1053(29, 4, 0, 0)
}; BakeCode_CompileCodes Block Finish
}; BakeCode_CompileCodes Block Finish
}; BakeCode_CompileCodes Block Finish
addfunc : void AddStateWork ( ) 
BakeCode_CompileCodes__addfunc : void AddStateWork ( ) 
block__ : {
if__sen : if ( Add_VariableFlag == false && Add_FunctionFlag == false ) 
block__ : {
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
block__ : {
set_var : Add_VariableFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable" 
closed_ : }

if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'F' ) 
block__ : {
set_var : Add_FunctionFlag = true 
set_var : state_text_stringptr = "Command : Add_Function" 
closed_ : }

closed_ : }

if__sen : else if ( Add_VariableFlag ) 
block__ : {
usefunc : AddVariableStateWork ( ) 
closed_ : }

if__sen : else if ( Add_FunctionFlag ) 
block__ : {
closed_ : }

closed_ : }

BakeCode_CompileCodes Block Start {
if__sen : if ( Add_VariableFlag == false && Add_FunctionFlag == false ) 
BakeCode_CompileCodes__if__sen : if ( Add_VariableFlag == false && Add_FunctionFlag == false ) 
if ( Add_VariableFlag == false && Add_FunctionFlag == false ) 
Add_VariableFlag == false && Add_FunctionFlag == false 
1543	:A=&Global_VID(178) > 77(77, 0, 0, 0)
1548	:A=*A_nopush(165)
1549	:PUSH_B_CONST_4(12) > 0(0, 0, 0, 0)
1554	:CM_BOOL_SAME_A(91)
1555	:POP_B(175)
1556	:A=&Global_VID(178) > 78(78, 0, 0, 0)
1561	:A=*A_nopush(165)
1562	:PUSH_B_CONST_4(12) > 0(0, 0, 0, 0)
1567	:CM_BOOL_SAME_A(91)
1568	:POP_B(175)
1569	:B=A(181)
1570	:POP_A(174)
1571	:LU_BOOL_AND_A(85)
1572	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
block__ : {
set_var : Add_VariableFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable" 
closed_ : }

if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'F' ) 
block__ : {
set_var : Add_FunctionFlag = true 
set_var : state_text_stringptr = "Command : Add_Function" 
closed_ : }

closed_ : }

BakeCode_CompileCodes Block Start {
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
BakeCode_CompileCodes__if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
if ( KeyDown ( evt ) && getEventKey ( evt ) == 'V' ) 
KeyDown ( evt ) && getEventKey ( evt ) == 'V' 
1577	:FUNC(153)
1578	:A=&Global_VID(178) > 24(24, 0, 0, 0)
1583	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1588	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 6(6, 0, 0, 0)
1597	:FUNC(153)
1598	:A=&Global_VID(178) > 24(24, 0, 0, 0)
1603	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1608	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 12(12, 0, 0, 0)
1617	:PUSH_B_CONST_1(10) > 86
1619	:CASTING_B(164) > 2
1621	:CM_BOOL_SAME_A(91)
1622	:POP_B(175)
1623	:B=A(181)
1624	:POP_A(174)
1625	:LU_BOOL_AND_A(85)
1626	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
set_var : Add_VariableFlag = true 
set_var : state_text_stringptr = "Command : Add_Variable" 
closed_ : }

BakeCode_CompileCodes Block Start {
set_var : Add_VariableFlag = true 
BakeCode_CompileCodes__set_var : Add_VariableFlag = true 
1631	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
1636	:A=&Global_VID(178) > 77(77, 0, 0, 0)
1641	:LA=A(161)
1642	:*LA=A_1(169)
set_var : state_text_stringptr = "Command : Add_Variable" 
BakeCode_CompileCodes__set_var : state_text_stringptr = "Command : Add_Variable" 
1643	:SET_A_CONST_STRING(172) > 23(23, 0, 0, 0)"Command : Add_Variable"
1671	:A=&Global_VID(178) > 68(68, 0, 0, 0)
1676	:LA=A(161)
1677	:*LA=A_8(186)
}; BakeCode_CompileCodes Block Finish
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'F' ) 
BakeCode_CompileCodes__if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'F' ) 
if ( KeyDown ( evt ) && getEventKey ( evt ) == 'F' ) 
KeyDown ( evt ) && getEventKey ( evt ) == 'F' 
1678	:FUNC(153)
1679	:A=&Global_VID(178) > 24(24, 0, 0, 0)
1684	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1689	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 6(6, 0, 0, 0)
1698	:FUNC(153)
1699	:A=&Global_VID(178) > 24(24, 0, 0, 0)
1704	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1709	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 12(12, 0, 0, 0)
1718	:PUSH_B_CONST_1(10) > 70
1720	:CASTING_B(164) > 2
1722	:CM_BOOL_SAME_A(91)
1723	:POP_B(175)
1724	:B=A(181)
1725	:POP_A(174)
1726	:LU_BOOL_AND_A(85)
1727	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
set_var : Add_FunctionFlag = true 
set_var : state_text_stringptr = "Command : Add_Function" 
closed_ : }

BakeCode_CompileCodes Block Start {
set_var : Add_FunctionFlag = true 
BakeCode_CompileCodes__set_var : Add_FunctionFlag = true 
1732	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
1737	:A=&Global_VID(178) > 78(78, 0, 0, 0)
1742	:LA=A(161)
1743	:*LA=A_1(169)
set_var : state_text_stringptr = "Command : Add_Function" 
BakeCode_CompileCodes__set_var : state_text_stringptr = "Command : Add_Function" 
1744	:SET_A_CONST_STRING(172) > 23(23, 0, 0, 0)"Command : Add_Function"
1772	:A=&Global_VID(178) > 68(68, 0, 0, 0)
1777	:LA=A(161)
1778	:*LA=A_8(186)
}; BakeCode_CompileCodes Block Finish
}; BakeCode_CompileCodes Block Finish
if__sen : else if ( Add_VariableFlag ) 
BakeCode_CompileCodes__if__sen : else if ( Add_VariableFlag ) 
else if ( Add_VariableFlag ) 
Add_VariableFlag 
1784	:A=&Global_VID(178) > 77(77, 0, 0, 0)
1789	:A=*A_nopush(165)
1790	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
usefunc : AddVariableStateWork ( ) 
closed_ : }

BakeCode_CompileCodes Block Start {
usefunc : AddVariableStateWork ( ) 
BakeCode_CompileCodes__usefunc : AddVariableStateWork ( ) 
1795	:FUNC(153)
1796	:FUNCJMP(162) > 1054(30, 4, 0, 0)
}; BakeCode_CompileCodes Block Finish
if__sen : else if ( Add_FunctionFlag ) 
BakeCode_CompileCodes__if__sen : else if ( Add_FunctionFlag ) 
else if ( Add_FunctionFlag ) 
Add_FunctionFlag 
1806	:A=&Global_VID(178) > 78(78, 0, 0, 0)
1811	:A=*A_nopush(165)
1812	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
closed_ : }

BakeCode_CompileCodes Block Start {
}; BakeCode_CompileCodes Block Finish
}; BakeCode_CompileCodes Block Finish
addfunc : void NoStateWork ( ) 
BakeCode_CompileCodes__addfunc : void NoStateWork ( ) 
block__ : {
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'A' ) 
block__ : {
set_var : AddFlag = true 
set_var : state_text_stringptr = "Command : Add" 
closed_ : }

closed_ : }

BakeCode_CompileCodes Block Start {
if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'A' ) 
BakeCode_CompileCodes__if__sen : if ( KeyDown ( evt ) && getEventKey ( evt ) == 'A' ) 
if ( KeyDown ( evt ) && getEventKey ( evt ) == 'A' ) 
KeyDown ( evt ) && getEventKey ( evt ) == 'A' 
1823	:FUNC(153)
1824	:A=&Global_VID(178) > 24(24, 0, 0, 0)
1829	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1834	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 6(6, 0, 0, 0)
1843	:FUNC(153)
1844	:A=&Global_VID(178) > 24(24, 0, 0, 0)
1849	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1854	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 12(12, 0, 0, 0)
1863	:PUSH_B_CONST_1(10) > 65
1865	:CASTING_B(164) > 2
1867	:CM_BOOL_SAME_A(91)
1868	:POP_B(175)
1869	:B=A(181)
1870	:POP_A(174)
1871	:LU_BOOL_AND_A(85)
1872	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
set_var : AddFlag = true 
set_var : state_text_stringptr = "Command : Add" 
closed_ : }

BakeCode_CompileCodes Block Start {
set_var : AddFlag = true 
BakeCode_CompileCodes__set_var : AddFlag = true 
1877	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
1882	:A=&Global_VID(178) > 76(76, 0, 0, 0)
1887	:LA=A(161)
1888	:*LA=A_1(169)
set_var : state_text_stringptr = "Command : Add" 
BakeCode_CompileCodes__set_var : state_text_stringptr = "Command : Add" 
1889	:SET_A_CONST_STRING(172) > 14(14, 0, 0, 0)"Command : Add"
1908	:A=&Global_VID(178) > 68(68, 0, 0, 0)
1913	:LA=A(161)
1914	:*LA=A_8(186)
}; BakeCode_CompileCodes Block Finish
}; BakeCode_CompileCodes Block Finish
addfunc : void StateWork ( ) 
BakeCode_CompileCodes__addfunc : void StateWork ( ) 
block__ : {
if__sen : if ( AddFlag == false ) 
block__ : {
usefunc : NoStateWork ( ) 
closed_ : }

if__sen : else 
block__ : {
usefunc : AddStateWork ( ) 
closed_ : }

closed_ : }

BakeCode_CompileCodes Block Start {
if__sen : if ( AddFlag == false ) 
BakeCode_CompileCodes__if__sen : if ( AddFlag == false ) 
if ( AddFlag == false ) 
AddFlag == false 
1916	:A=&Global_VID(178) > 76(76, 0, 0, 0)
1921	:A=*A_nopush(165)
1922	:PUSH_B_CONST_4(12) > 0(0, 0, 0, 0)
1927	:CM_BOOL_SAME_A(91)
1928	:POP_B(175)
1929	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
usefunc : NoStateWork ( ) 
closed_ : }

BakeCode_CompileCodes Block Start {
usefunc : NoStateWork ( ) 
BakeCode_CompileCodes__usefunc : NoStateWork ( ) 
1934	:FUNC(153)
1935	:FUNCJMP(162) > 1823(31, 7, 0, 0)
}; BakeCode_CompileCodes Block Finish
if__sen : else 
BakeCode_CompileCodes__if__sen : else 
else 
block__ : {
usefunc : AddStateWork ( ) 
closed_ : }

BakeCode_CompileCodes Block Start {
usefunc : AddStateWork ( ) 
BakeCode_CompileCodes__usefunc : AddStateWork ( ) 
1945	:FUNC(153)
1946	:FUNCJMP(162) > 1543(7, 6, 0, 0)
}; BakeCode_CompileCodes Block Finish
}; BakeCode_CompileCodes Block Finish
addfunc : int main ( ) 
BakeCode_CompileCodes__addfunc : int main ( ) 
block__ : {
while__ : while ( true ) 
block__ : {
set_var : evt = GetMessage ( ) 
usefunc : StateWork ( ) 
usefunc : ChangeRenderData ( & RenderText_AddState , _rdText ( stloc . fp . x , stloc . fp . y , stloc . lp . x , stloc . lp . y , state_text_stringptr , state_text_color , 20 ) , state_text_layer ) 
usefunc : ReleaseRenderData ( state_text_layer ) 
closed_ : }

closed_ : }

BakeCode_CompileCodes Block Start {
while__ : while ( true ) 
BakeCode_CompileCodes__while__ : while ( true ) 
1952	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
1957	:IF(151) > -16843010(254, 254, 254, 254)
block__ : {
set_var : evt = GetMessage ( ) 
usefunc : StateWork ( ) 
usefunc : ChangeRenderData ( & RenderText_AddState , _rdText ( stloc . fp . x , stloc . fp . y , stloc . lp . x , stloc . lp . y , state_text_stringptr , state_text_color , 20 ) , state_text_layer ) 
usefunc : ReleaseRenderData ( state_text_layer ) 
closed_ : }

BakeCode_CompileCodes Block Start {
set_var : evt = GetMessage ( ) 
BakeCode_CompileCodes__set_var : evt = GetMessage ( ) 
1962	:FUNC(153)
1963	:FUNCJMP(162) > 260(4, 1, 0, 0)
1968	:A=&Global_VID(178) > 24(24, 0, 0, 0)
1973	:LA=A(161)
1974	:*LA=*A_N(182) > 12(12, 0, 0, 0)
usefunc : StateWork ( ) 
BakeCode_CompileCodes__usefunc : StateWork ( ) 
1979	:FUNC(153)
1980	:FUNCJMP(162) > 1916(124, 7, 0, 0)
usefunc : ChangeRenderData ( & RenderText_AddState , _rdText ( stloc . fp . x , stloc . fp . y , stloc . lp . x , stloc . lp . y , state_text_stringptr , state_text_color , 20 ) , state_text_layer ) 
BakeCode_CompileCodes__usefunc : ChangeRenderData ( & RenderText_AddState , _rdText ( stloc . fp . x , stloc . fp . y , stloc . lp . x , stloc . lp . y , state_text_stringptr , state_text_color , 20 ) , state_text_layer ) 
1985	:FUNC(153)
1986	:A=&Global_VID(178) > 90(90, 0, 0, 0)
1991	:A=*A_nopush(165)
1992	:PARAM_4(156)
1993	:FUNC(153)
1994	:PUSH_A_CONST_4(6) > 20(20, 0, 0, 0)
1999	:CASTING_A(163) > 12
2001	:PARAM_4(156)
2002	:A=&Global_VID(178) > 36(36, 0, 0, 0)
2007	:PARAM_N_COPY_BY_ADDRESS(177) > 16(16, 0, 0, 0)
2012	:A=&Global_VID(178) > 68(68, 0, 0, 0)
2017	:A=*A_nopush(165)
2018	:PARAM_8(185)
2019	:A=&Global_VID(178) > 52(52, 0, 0, 0)
2024	:PUSH_B_CONST_4(12) > 8(8, 0, 0, 0)
2029	:AU_INT_ADD_A(25)
2030	:PUSH_B_CONST_4(12) > 4(4, 0, 0, 0)
2035	:AU_INT_ADD_A(25)
2036	:A=*A_nopush(165)
2037	:PARAM_4(156)
2038	:A=&Global_VID(178) > 52(52, 0, 0, 0)
2043	:PUSH_B_CONST_4(12) > 8(8, 0, 0, 0)
2048	:AU_INT_ADD_A(25)
2049	:PUSH_B_CONST_4(12) > 0(0, 0, 0, 0)
2054	:AU_INT_ADD_A(25)
2055	:A=*A_nopush(165)
2056	:PARAM_4(156)
2057	:A=&Global_VID(178) > 52(52, 0, 0, 0)
2062	:PUSH_B_CONST_4(12) > 0(0, 0, 0, 0)
2067	:AU_INT_ADD_A(25)
2068	:PUSH_B_CONST_4(12) > 4(4, 0, 0, 0)
2073	:AU_INT_ADD_A(25)
2074	:A=*A_nopush(165)
2075	:PARAM_4(156)
2076	:A=&Global_VID(178) > 52(52, 0, 0, 0)
2081	:PUSH_B_CONST_4(12) > 0(0, 0, 0, 0)
2086	:AU_INT_ADD_A(25)
2087	:PUSH_B_CONST_4(12) > 0(0, 0, 0, 0)
2092	:AU_INT_ADD_A(25)
2093	:A=*A_nopush(165)
2094	:PARAM_4(156)
2095	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 16(16, 0, 0, 0)
2104	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
2109	:A=&Global_VID(178) > 82(82, 0, 0, 0)
2114	:PARAM_8(185)
2115	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 17(17, 0, 0, 0)
usefunc : ReleaseRenderData ( state_text_layer ) 
BakeCode_CompileCodes__usefunc : ReleaseRenderData ( state_text_layer ) 
2124	:FUNC(153)
2125	:A=&Global_VID(178) > 90(90, 0, 0, 0)
2130	:A=*A_nopush(165)
2131	:PARAM_4(156)
2132	:Extend_Instruction(255) > 2(2, 0, 0, 0) > 18(18, 0, 0, 0)
}; BakeCode_CompileCodes Block Finish
}; BakeCode_CompileCodes Block Finish
BakeCode_CompileCodes...finish
ICB[000002A3FA7C4E10] BakeCode finish.
