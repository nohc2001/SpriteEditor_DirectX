Inside Code Bake System Start
ICB_StaticInit...finish
Create_New_ICB_Extension_Init : exGeometry Initialization...finish
Create_New_ICB[000002114CC8399B] Initialization...finish
ICB[000002114CC8399B] BakeCode start. filename : [C:\Users\nohc2\Desktop\Dev\Resource\ecs_face.txt]
ICB[000002114CC8399B] BakeCode_GetCodeFromText...finish
ICB[000002114CC8399B] BakeCode_AddTextBlocks...finish
ICB[000002114CC8399B] BakeCode_ScanStructTypes...finish
ICB[000002114CC8399B] BakeCode_AddStructTypes...finish
ICB[000002114CC8399B] BakeCode_ScanCodes...start
[0] ~ add variable : add_var : pObject this  ~ [2]
[3] ~ add and set variable : adsetvar: float eyeStartPos_rate = 0.5  ~ [7]
[8] ~ add and set variable : adsetvar: float eyeEndPos_rateX = 0.2  ~ [12]
[13] ~ add and set variable : adsetvar: float eyeEndPos_rateY = 0.2  ~ [17]
[18] ~ add and set variable : adsetvar: float eyeTopPos_rateX = 0.2  ~ [22]
[23] ~ add and set variable : adsetvar: float eyeTopPos_rateY = 0.1  ~ [27]
[28] ~ add and set variable : adsetvar: float eyeBotPos_rateY = 0.2  ~ [32]
[33] ~ addfunction : addfunc : int main ( )  ~ [36]
[37] ~ blocks : start
[0] ~ add and set variable : adsetvar: float PI = 3.141592  ~ [4]
[5] ~ add and set variable : adsetvar: pSprite mainspr = _pSprite ( 1 )  ~ [12]
[13] ~ add and set variable : adsetvar: pSprite circle_spr = _pSprite ( 0 )  ~ [20]
[21] ~ add variable : add_var : prbuffer circle_buff  ~ [23]
[24] ~  ~ [24]
[25] ~ set Variable : set_var : circle_buff = _prbuffer ( false )  ~ [30]
[31] ~ add and set variable : adsetvar: gcolor skin_color = _gcolor ( 244 , 200 , 96 , 255 )  ~ [44]
[45] ~ add and set variable : adsetvar: vec2f center = _vec2f ( 0 , 0 )  ~ [54]
[55] ~ add and set variable : adsetvar: float radius = 200  ~ [59]
[60] ~ add and set variable : adsetvar: float angle = 0  ~ [64]
[65] ~ add and set variable : adsetvar: float delta_angle = PI / 30  ~ [71]
[72] ~ use Function : usefunc : begin ( circle_buff , false )  ~ [78]
[79] ~ add and set variable : adsetvar: int i = 0  ~ [83]
[84] ~ while : while__ : while ( i < 31 )  ~ [89]
[90] ~ blocks : start
[0] ~ add and set variable : adsetvar: angle2d anglevec = _angle2d ( angle )  ~ [7]
[8] ~ add and set variable : adsetvar: gpos pos = _gpos ( radius * anglevec . delta . x , radius * anglevec . delta . y , 0 )  ~ [31]
[32] ~ use Function : usefunc : av ( circle_buff , pos , skin_color )  ~ [40]
[41] ~  ~ [41]
[42] ~ set Variable : set_var : angle += delta_angle  ~ [44]
[45] ~  ~ [45]
[46] ~ set Variable : set_var : i += 1  ~ [48]
BakeCode_ScanCodes...block__ : {
adsetvar: angle2d anglevec = _angle2d ( angle ) 
adsetvar: gpos pos = _gpos ( radius * anglevec . delta . x , radius * anglevec . delta . y , 0 ) 
usefunc : av ( circle_buff , pos , skin_color ) 
set_var : angle += delta_angle 
set_var : i += 1 
closed_ : }
 ~ [140]
[141] ~ add and set variable : adsetvar: circle face_outline = _circle ( center , radius )  ~ [150]
[151] ~ add and set variable : adsetvar: vec2f downPos = _vec2f ( center . x , center . y - radius )  ~ [166]
[167] ~ add and set variable : adsetvar: vec2f NoseCenter = get_pos_in_LineAndRatioAB ( _line2d ( downPos , center ) , 1 , 1 )  ~ [183]
[184] ~ add and set variable : adsetvar: vec2f MouseCenter = downPos  ~ [188]
[189] ~ add and set variable : adsetvar: vec2f ChinBorder = _vec2f ( center . x , center . y - 1.5 * radius )  ~ [206]
[207] ~ add and set variable : adsetvar: vec2f rightPos = _vec2f ( center . x + radius , center . y )  ~ [222]
[223] ~ add and set variable : adsetvar: vec2f leftPos = _vec2f ( center . x - radius , center . y )  ~ [238]
[239] ~ add and set variable : adsetvar: vec2f [ 64 ] RightChinLine = get_poses_in_Bezier1F ( ChinBorder , rightPos , _vec2f ( center . x + radius * 0.75 , ChinBorder . y ) , 64 )  ~ [268]
[269] ~ add and set variable : adsetvar: vec2f [ 64 ] LeftChinLine = get_poses_in_Bezier1F ( leftPos , ChinBorder , _vec2f ( center . x - radius * 0.75 , ChinBorder . y ) , 64 )  ~ [298]
[299] ~  ~ [299]
[300] ~ set Variable : set_var : i = 0  ~ [302]
[303] ~ while : while__ : while ( i < 64 )  ~ [308]
[309] ~ blocks : start
[0] ~ use Function : usefunc : av ( circle_buff , LeftChinLine [ i ] , skin_color )  ~ [11]
[12] ~  ~ [12]
[13] ~ set Variable : set_var : i += 1  ~ [15]
BakeCode_ScanCodes...block__ : {
usefunc : av ( circle_buff , LeftChinLine [ i ] , skin_color ) 
set_var : i += 1 
closed_ : }
 ~ [326]
[327] ~  ~ [327]
[328] ~ set Variable : set_var : i = 0  ~ [330]
[331] ~ while : while__ : while ( i < 64 )  ~ [336]
[337] ~ blocks : start
[0] ~ use Function : usefunc : av ( circle_buff , RightChinLine [ i ] , skin_color )  ~ [11]
[12] ~  ~ [12]
[13] ~ set Variable : set_var : i += 1  ~ [15]
BakeCode_ScanCodes...block__ : {
usefunc : av ( circle_buff , RightChinLine [ i ] , skin_color ) 
set_var : i += 1 
closed_ : }
 ~ [354]
[355] ~ use Function : usefunc : end ( circle_buff )  ~ [359]
[360] ~ use Function : usefunc : spr_push_rbuffer ( circle_spr , circle_buff )  ~ [366]
[367] ~ use Function : usefunc : spr_pushchild ( mainspr , _pObject ( circle_spr , _gpos ( 0 , 0 , 0 ) , _gpos ( 0 , 0 , 0 ) , _gpos ( 1 , 1 , 1 ) , 0 ) )  ~ [405]
[406] ~ use Function : usefunc : obj_setsource ( this , mainspr )  ~ [412]
[413] ~ while : while__ : while ( true )  ~ [416]
[417] ~ blocks : start
[0] ~ add and set variable : adsetvar: int aaa = 10  ~ [4]
BakeCode_ScanCodes...block__ : {
adsetvar: int aaa = 10 
closed_ : }
 ~ [423]
[424] ~ return in Function : return_ : return 0  ~ [426]
BakeCode_ScanCodes...block__ : {
adsetvar: float PI = 3.141592 
adsetvar: pSprite mainspr = _pSprite ( 1 ) 
adsetvar: pSprite circle_spr = _pSprite ( 0 ) 
add_var : prbuffer circle_buff 
set_var : circle_buff = _prbuffer ( false ) 
adsetvar: gcolor skin_color = _gcolor ( 244 , 200 , 96 , 255 ) 
adsetvar: vec2f center = _vec2f ( 0 , 0 ) 
adsetvar: float radius = 200 
adsetvar: float angle = 0 
adsetvar: float delta_angle = PI / 30 
usefunc : begin ( circle_buff , false ) 
adsetvar: int i = 0 
while__ : while ( i < 31 ) 
block__ : {
adsetvar: angle2d anglevec = _angle2d ( angle ) 
adsetvar: gpos pos = _gpos ( radius * anglevec . delta . x , radius * anglevec . delta . y , 0 ) 
usefunc : av ( circle_buff , pos , skin_color ) 
set_var : angle += delta_angle 
set_var : i += 1 
closed_ : }

adsetvar: circle face_outline = _circle ( center , radius ) 
adsetvar: vec2f downPos = _vec2f ( center . x , center . y - radius ) 
adsetvar: vec2f NoseCenter = get_pos_in_LineAndRatioAB ( _line2d ( downPos , center ) , 1 , 1 ) 
adsetvar: vec2f MouseCenter = downPos 
adsetvar: vec2f ChinBorder = _vec2f ( center . x , center . y - 1.5 * radius ) 
adsetvar: vec2f rightPos = _vec2f ( center . x + radius , center . y ) 
adsetvar: vec2f leftPos = _vec2f ( center . x - radius , center . y ) 
adsetvar: vec2f [ 64 ] RightChinLine = get_poses_in_Bezier1F ( ChinBorder , rightPos , _vec2f ( center . x + radius * 0.75 , ChinBorder . y ) , 64 ) 
adsetvar: vec2f [ 64 ] LeftChinLine = get_poses_in_Bezier1F ( leftPos , ChinBorder , _vec2f ( center . x - radius * 0.75 , ChinBorder . y ) , 64 ) 
set_var : i = 0 
while__ : while ( i < 64 ) 
block__ : {
usefunc : av ( circle_buff , LeftChinLine [ i ] , skin_color ) 
set_var : i += 1 
closed_ : }

set_var : i = 0 
while__ : while ( i < 64 ) 
block__ : {
usefunc : av ( circle_buff , RightChinLine [ i ] , skin_color ) 
set_var : i += 1 
closed_ : }

usefunc : end ( circle_buff ) 
usefunc : spr_push_rbuffer ( circle_spr , circle_buff ) 
usefunc : spr_pushchild ( mainspr , _pObject ( circle_spr , _gpos ( 0 , 0 , 0 ) , _gpos ( 0 , 0 , 0 ) , _gpos ( 1 , 1 , 1 ) , 0 ) ) 
usefunc : obj_setsource ( this , mainspr ) 
while__ : while ( true ) 
block__ : {
adsetvar: int aaa = 10 
closed_ : }

return_ : return 0 
closed_ : }
 ~ [465]
BakeCode_ScanCodes...finish
ICB[000002114CC8399B] BakeCode_GlobalMemoryInit...finish
ICB[000002114CC8399B] BakeCode_CompileCodes...start
BakeCode_CompileCodes__add_var : pObject this 
BakeCode_CompileCodes__adsetvar: float eyeStartPos_rate = 0.5 
6	:PUSH_A_CONST_4(6) > 1056964608(0, 0, 0, 63)
11	:A=&Global_VID(178) > 8(8, 0, 0, 0)
16	:LA=A(161)
17	:*LA=A_4(171)
BakeCode_CompileCodes__adsetvar: float eyeEndPos_rateX = 0.2 
18	:PUSH_A_CONST_4(6) > 1045220557(205, 204, 76, 62)
23	:A=&Global_VID(178) > 12(12, 0, 0, 0)
28	:LA=A(161)
29	:*LA=A_4(171)
BakeCode_CompileCodes__adsetvar: float eyeEndPos_rateY = 0.2 
30	:PUSH_A_CONST_4(6) > 1045220557(205, 204, 76, 62)
35	:A=&Global_VID(178) > 16(16, 0, 0, 0)
40	:LA=A(161)
41	:*LA=A_4(171)
BakeCode_CompileCodes__adsetvar: float eyeTopPos_rateX = 0.2 
42	:PUSH_A_CONST_4(6) > 1045220557(205, 204, 76, 62)
47	:A=&Global_VID(178) > 20(20, 0, 0, 0)
52	:LA=A(161)
53	:*LA=A_4(171)
BakeCode_CompileCodes__adsetvar: float eyeTopPos_rateY = 0.1 
54	:PUSH_A_CONST_4(6) > 1036831949(205, 204, 204, 61)
59	:A=&Global_VID(178) > 24(24, 0, 0, 0)
64	:LA=A(161)
65	:*LA=A_4(171)
BakeCode_CompileCodes__adsetvar: float eyeBotPos_rateY = 0.2 
66	:PUSH_A_CONST_4(6) > 1045220557(205, 204, 76, 62)
71	:A=&Global_VID(178) > 28(28, 0, 0, 0)
76	:LA=A(161)
77	:*LA=A_4(171)
BakeCode_CompileCodes__addfunc : int main ( ) 
BakeCode_CompileCodes Block Start {
BakeCode_CompileCodes__adsetvar: float PI = 3.141592 
78	:ADD_STACK_VARIABLE(0) > 4(4, 0, 0, 0)
83	:PUSH_A_CONST_4(6) > 1078530008(216, 15, 73, 64)
88	:A=&VID(159) > 4(4, 0, 0, 0)
93	:LA=A(161)
94	:*LA=A_4(171)
BakeCode_CompileCodes__adsetvar: pSprite mainspr = _pSprite ( 1 ) 
95	:ADD_STACK_VARIABLE(0) > 12(12, 0, 0, 0)
100	:FUNC(153)
101	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
106	:PARAM_4(156)
107	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 23(23, 0, 0, 0)
116	:A=&VID(159) > 12(12, 0, 0, 0)
121	:LA=A(161)
122	:*LA=*A_N(182) > 8(8, 0, 0, 0)
BakeCode_CompileCodes__adsetvar: pSprite circle_spr = _pSprite ( 0 ) 
127	:ADD_STACK_VARIABLE(0) > 20(20, 0, 0, 0)
132	:FUNC(153)
133	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
138	:PARAM_4(156)
139	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 23(23, 0, 0, 0)
148	:A=&VID(159) > 20(20, 0, 0, 0)
153	:LA=A(161)
154	:*LA=*A_N(182) > 8(8, 0, 0, 0)
BakeCode_CompileCodes__add_var : prbuffer circle_buff 
159	:ADD_STACK_VARIABLE(0) > 28(28, 0, 0, 0)
BakeCode_CompileCodes__set_var : circle_buff = _prbuffer ( false ) 
164	:FUNC(153)
165	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
170	:PARAM_1(154)
171	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 11(11, 0, 0, 0)
180	:A=&VID(159) > 28(28, 0, 0, 0)
185	:LA=A(161)
186	:*LA=*A_N(182) > 8(8, 0, 0, 0)
BakeCode_CompileCodes__adsetvar: gcolor skin_color = _gcolor ( 244 , 200 , 96 , 255 ) 
191	:ADD_STACK_VARIABLE(0) > 44(44, 0, 0, 0)
196	:FUNC(153)
197	:PUSH_A_CONST_4(6) > 255(255, 0, 0, 0)
202	:PARAM_1(154)
203	:PUSH_A_CONST_4(6) > 96(96, 0, 0, 0)
208	:PARAM_1(154)
209	:PUSH_A_CONST_4(6) > 200(200, 0, 0, 0)
214	:PARAM_1(154)
215	:PUSH_A_CONST_4(6) > 244(244, 0, 0, 0)
220	:PARAM_1(154)
221	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 5(5, 0, 0, 0)
230	:A=&VID(159) > 44(44, 0, 0, 0)
235	:LA=A(161)
236	:*LA=*A_N(182) > 16(16, 0, 0, 0)
BakeCode_CompileCodes__adsetvar: vec2f center = _vec2f ( 0 , 0 ) 
241	:ADD_STACK_VARIABLE(0) > 52(52, 0, 0, 0)
246	:FUNC(153)
247	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
252	:CASTING_A(163) > 12
254	:PARAM_4(156)
255	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
260	:CASTING_A(163) > 12
262	:PARAM_4(156)
263	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 0(0, 0, 0, 0)
272	:A=&VID(159) > 52(52, 0, 0, 0)
277	:LA=A(161)
278	:*LA=*A_N(182) > 8(8, 0, 0, 0)
BakeCode_CompileCodes__adsetvar: float radius = 200 
283	:ADD_STACK_VARIABLE(0) > 56(56, 0, 0, 0)
288	:PUSH_A_CONST_4(6) > 200(200, 0, 0, 0)
293	:CASTING_A(163) > 12
295	:A=&VID(159) > 56(56, 0, 0, 0)
300	:LA=A(161)
301	:*LA=A_4(171)
BakeCode_CompileCodes__adsetvar: float angle = 0 
302	:ADD_STACK_VARIABLE(0) > 60(60, 0, 0, 0)
307	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
312	:CASTING_A(163) > 12
314	:A=&VID(159) > 60(60, 0, 0, 0)
319	:LA=A(161)
320	:*LA=A_4(171)
BakeCode_CompileCodes__adsetvar: float delta_angle = PI / 30 
321	:ADD_STACK_VARIABLE(0) > 64(64, 0, 0, 0)
326	:A=&VID(159) > 4(4, 0, 0, 0)
331	:A=*A_nopush(165)
332	:PUSH_B_CONST_4(12) > 30(30, 0, 0, 0)
337	:CASTING_B(164) > 12
339	:AU_FLOAT_DIV_A(71)
340	:A=&VID(159) > 64(64, 0, 0, 0)
345	:LA=A(161)
346	:*LA=A_4(171)
BakeCode_CompileCodes__usefunc : begin ( circle_buff , false ) 
347	:FUNC(153)
348	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
353	:PARAM_1(154)
354	:A=&VID(159) > 28(28, 0, 0, 0)
359	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
364	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 12(12, 0, 0, 0)
BakeCode_CompileCodes__adsetvar: int i = 0 
373	:ADD_STACK_VARIABLE(0) > 68(68, 0, 0, 0)
378	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
383	:A=&VID(159) > 68(68, 0, 0, 0)
388	:LA=A(161)
389	:*LA=A_4(171)
BakeCode_CompileCodes__while__ : while ( i < 31 ) 
390	:A=&VID(159) > 68(68, 0, 0, 0)
395	:A=*A_nopush(165)
396	:PUSH_B_CONST_4(12) > 31(31, 0, 0, 0)
401	:CM_BOOL_INT_RBIG_A(131)
402	:IF(151) > -16843010(254, 254, 254, 254)
BakeCode_CompileCodes Block Start {
BakeCode_CompileCodes__adsetvar: angle2d anglevec = _angle2d ( angle ) 
407	:ADD_STACK_VARIABLE(0) > 80(80, 0, 0, 0)
412	:FUNC(153)
413	:A=&VID(159) > 60(60, 0, 0, 0)
418	:A=*A_nopush(165)
419	:PARAM_4(156)
420	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 4(4, 0, 0, 0)
429	:A=&VID(159) > 80(80, 0, 0, 0)
434	:LA=A(161)
435	:*LA=*A_N(182) > 12(12, 0, 0, 0)
BakeCode_CompileCodes__adsetvar: gpos pos = _gpos ( radius * anglevec . delta . x , radius * anglevec . delta . y , 0 ) 
440	:ADD_STACK_VARIABLE(0) > 92(92, 0, 0, 0)
445	:FUNC(153)
446	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
451	:CASTING_A(163) > 12
453	:PARAM_4(156)
454	:A=&VID(159) > 56(56, 0, 0, 0)
459	:A=*A_nopush(165)
460	:A<=&VID[Const](183) > 80(80, 0, 0, 0) > 0(0, 0, 0, 0)
469	:PUSH_B_CONST_4(12) > 4(4, 0, 0, 0)
474	:AU_INT_ADD_A(25)
475	:B=A(181)
476	:POP_A(174)
477	:B=*B_nopush(166)
478	:AU_FLOAT_MUL_A(57)
479	:PARAM_4(156)
480	:A=&VID(159) > 56(56, 0, 0, 0)
485	:A=*A_nopush(165)
486	:A<=&VID[Const](183) > 80(80, 0, 0, 0) > 0(0, 0, 0, 0)
495	:PUSH_B_CONST_4(12) > 0(0, 0, 0, 0)
500	:AU_INT_ADD_A(25)
501	:B=A(181)
502	:POP_A(174)
503	:B=*B_nopush(166)
504	:AU_FLOAT_MUL_A(57)
505	:PARAM_4(156)
506	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 3(3, 0, 0, 0)
515	:A=&VID(159) > 92(92, 0, 0, 0)
520	:LA=A(161)
521	:*LA=*A_N(182) > 12(12, 0, 0, 0)
BakeCode_CompileCodes__usefunc : av ( circle_buff , pos , skin_color ) 
526	:FUNC(153)
527	:A=&VID(159) > 44(44, 0, 0, 0)
532	:PARAM_N_COPY_BY_ADDRESS(177) > 16(16, 0, 0, 0)
537	:A=&VID(159) > 92(92, 0, 0, 0)
542	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
547	:A=&VID(159) > 28(28, 0, 0, 0)
552	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
557	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 14(14, 0, 0, 0)
BakeCode_CompileCodes__set_var : angle += delta_angle 
566	:B=&VID(160) > 64(64, 0, 0, 0)
571	:B=*B_nopush(166)
572	:A=&VID(159) > 60(60, 0, 0, 0)
577	:A=*A_nopush(165)
578	:AU_FLOAT_ADD_A(29)
579	:A=&VID(159) > 60(60, 0, 0, 0)
584	:LA=A(161)
585	:*LA=A_4(171)
BakeCode_CompileCodes__set_var : i += 1 
586	:PUSH_B_CONST_4(12) > 1(1, 0, 0, 0)
591	:A=&VID(159) > 68(68, 0, 0, 0)
596	:A=*A_nopush(165)
597	:AU_INT_ADD_A(25)
598	:A=&VID(159) > 68(68, 0, 0, 0)
603	:LA=A(161)
604	:*LA=A_4(171)
}; BakeCode_CompileCodes Block Finish
BakeCode_CompileCodes__adsetvar: circle face_outline = _circle ( center , radius ) 
610	:ADD_STACK_VARIABLE(0) > 80(80, 0, 0, 0)
615	:FUNC(153)
616	:A=&VID(159) > 56(56, 0, 0, 0)
621	:A=*A_nopush(165)
622	:PARAM_4(156)
623	:A=&VID(159) > 52(52, 0, 0, 0)
628	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
633	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 1(1, 0, 0, 0)
642	:A=&VID(159) > 80(80, 0, 0, 0)
647	:LA=A(161)
648	:*LA=*A_N(182) > 12(12, 0, 0, 0)
BakeCode_CompileCodes__adsetvar: vec2f downPos = _vec2f ( center . x , center . y - radius ) 
653	:ADD_STACK_VARIABLE(0) > 88(88, 0, 0, 0)
658	:FUNC(153)
659	:A<=&VID[Const](183) > 52(52, 0, 0, 0) > 4(4, 0, 0, 0)
668	:A=*A_nopush(165)
669	:B=&VID(160) > 56(56, 0, 0, 0)
674	:B=*B_nopush(166)
675	:AU_FLOAT_MIN_A(43)
676	:PARAM_4(156)
677	:A<=&VID[Const](183) > 52(52, 0, 0, 0) > 0(0, 0, 0, 0)
686	:A=*A_nopush(165)
687	:PARAM_4(156)
688	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 0(0, 0, 0, 0)
697	:A=&VID(159) > 88(88, 0, 0, 0)
702	:LA=A(161)
703	:*LA=*A_N(182) > 8(8, 0, 0, 0)
BakeCode_CompileCodes__adsetvar: vec2f NoseCenter = get_pos_in_LineAndRatioAB ( _line2d ( downPos , center ) , 1 , 1 ) 
708	:ADD_STACK_VARIABLE(0) > 96(96, 0, 0, 0)
713	:FUNC(153)
714	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
719	:CASTING_A(163) > 12
721	:PARAM_4(156)
722	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
727	:CASTING_A(163) > 12
729	:PARAM_4(156)
730	:FUNC(153)
731	:A=&VID(159) > 52(52, 0, 0, 0)
736	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
741	:A=&VID(159) > 88(88, 0, 0, 0)
746	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
751	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 2(2, 0, 0, 0)
760	:PARAM_N_COPY_BY_ADDRESS(177) > 16(16, 0, 0, 0)
765	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 6(6, 0, 0, 0)
774	:A=&VID(159) > 96(96, 0, 0, 0)
779	:LA=A(161)
780	:*LA=*A_N(182) > 8(8, 0, 0, 0)
BakeCode_CompileCodes__adsetvar: vec2f MouseCenter = downPos 
785	:ADD_STACK_VARIABLE(0) > 104(104, 0, 0, 0)
790	:A=&VID(159) > 88(88, 0, 0, 0)
795	:A=&VID(159) > 104(104, 0, 0, 0)
800	:LA=A(161)
801	:*LA=*A_N(182) > 8(8, 0, 0, 0)
BakeCode_CompileCodes__adsetvar: vec2f ChinBorder = _vec2f ( center . x , center . y - 1.5 * radius ) 
806	:ADD_STACK_VARIABLE(0) > 112(112, 0, 0, 0)
811	:FUNC(153)
812	:A<=&VID[Const](183) > 52(52, 0, 0, 0) > 4(4, 0, 0, 0)
821	:A=*A_nopush(165)
822	:PUSH_A_CONST_4(6) > 1069547520(0, 0, 192, 63)
827	:B=&VID(160) > 56(56, 0, 0, 0)
832	:B=*B_nopush(166)
833	:AU_FLOAT_MUL_A(57)
834	:B=A(181)
835	:POP_A(174)
836	:AU_FLOAT_MIN_A(43)
837	:PARAM_4(156)
838	:A<=&VID[Const](183) > 52(52, 0, 0, 0) > 0(0, 0, 0, 0)
847	:A=*A_nopush(165)
848	:PARAM_4(156)
849	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 0(0, 0, 0, 0)
858	:A=&VID(159) > 112(112, 0, 0, 0)
863	:LA=A(161)
864	:*LA=*A_N(182) > 8(8, 0, 0, 0)
BakeCode_CompileCodes__adsetvar: vec2f rightPos = _vec2f ( center . x + radius , center . y ) 
869	:ADD_STACK_VARIABLE(0) > 120(120, 0, 0, 0)
874	:FUNC(153)
875	:A<=&VID[Const](183) > 52(52, 0, 0, 0) > 4(4, 0, 0, 0)
884	:A=*A_nopush(165)
885	:PARAM_4(156)
886	:A<=&VID[Const](183) > 52(52, 0, 0, 0) > 0(0, 0, 0, 0)
895	:A=*A_nopush(165)
896	:B=&VID(160) > 56(56, 0, 0, 0)
901	:B=*B_nopush(166)
902	:AU_FLOAT_ADD_A(29)
903	:PARAM_4(156)
904	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 0(0, 0, 0, 0)
913	:A=&VID(159) > 120(120, 0, 0, 0)
918	:LA=A(161)
919	:*LA=*A_N(182) > 8(8, 0, 0, 0)
BakeCode_CompileCodes__adsetvar: vec2f leftPos = _vec2f ( center . x - radius , center . y ) 
924	:ADD_STACK_VARIABLE(0) > 128(128, 0, 0, 0)
929	:FUNC(153)
930	:A<=&VID[Const](183) > 52(52, 0, 0, 0) > 4(4, 0, 0, 0)
939	:A=*A_nopush(165)
940	:PARAM_4(156)
941	:A<=&VID[Const](183) > 52(52, 0, 0, 0) > 0(0, 0, 0, 0)
950	:A=*A_nopush(165)
951	:B=&VID(160) > 56(56, 0, 0, 0)
956	:B=*B_nopush(166)
957	:AU_FLOAT_MIN_A(43)
958	:PARAM_4(156)
959	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 0(0, 0, 0, 0)
968	:A=&VID(159) > 128(128, 0, 0, 0)
973	:LA=A(161)
974	:*LA=*A_N(182) > 8(8, 0, 0, 0)
BakeCode_CompileCodes__adsetvar: vec2f [ 64 ] RightChinLine = get_poses_in_Bezier1F ( ChinBorder , rightPos , _vec2f ( center . x + radius * 0.75 , ChinBorder . y ) , 64 ) 
979	:ADD_STACK_VARIABLE(0) > 640(128, 2, 0, 0)
984	:FUNC(153)
985	:PUSH_A_CONST_4(6) > 64(64, 0, 0, 0)
990	:PARAM_4(156)
991	:FUNC(153)
992	:A<=&VID[Const](183) > 112(112, 0, 0, 0) > 4(4, 0, 0, 0)
1001	:A=*A_nopush(165)
1002	:PARAM_4(156)
1003	:A<=&VID[Const](183) > 52(52, 0, 0, 0) > 0(0, 0, 0, 0)
1012	:A=*A_nopush(165)
1013	:A=&VID(159) > 56(56, 0, 0, 0)
1018	:A=*A_nopush(165)
1019	:PUSH_B_CONST_4(12) > 1061158912(0, 0, 64, 63)
1024	:AU_FLOAT_MUL_A(57)
1025	:B=A(181)
1026	:POP_A(174)
1027	:AU_FLOAT_ADD_A(29)
1028	:PARAM_4(156)
1029	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 0(0, 0, 0, 0)
1038	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1043	:A=&VID(159) > 120(120, 0, 0, 0)
1048	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1053	:A=&VID(159) > 112(112, 0, 0, 0)
1058	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1063	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 7(7, 0, 0, 0)
1072	:A=&VID(159) > 640(128, 2, 0, 0)
1077	:LA=A(161)
1078	:*LA=*A_N(182) > 512(0, 2, 0, 0)
BakeCode_CompileCodes__adsetvar: vec2f [ 64 ] LeftChinLine = get_poses_in_Bezier1F ( leftPos , ChinBorder , _vec2f ( center . x - radius * 0.75 , ChinBorder . y ) , 64 ) 
1083	:ADD_STACK_VARIABLE(0) > 1152(128, 4, 0, 0)
1088	:FUNC(153)
1089	:PUSH_A_CONST_4(6) > 64(64, 0, 0, 0)
1094	:PARAM_4(156)
1095	:FUNC(153)
1096	:A<=&VID[Const](183) > 112(112, 0, 0, 0) > 4(4, 0, 0, 0)
1105	:A=*A_nopush(165)
1106	:PARAM_4(156)
1107	:A<=&VID[Const](183) > 52(52, 0, 0, 0) > 0(0, 0, 0, 0)
1116	:A=*A_nopush(165)
1117	:A=&VID(159) > 56(56, 0, 0, 0)
1122	:A=*A_nopush(165)
1123	:PUSH_B_CONST_4(12) > 1061158912(0, 0, 64, 63)
1128	:AU_FLOAT_MUL_A(57)
1129	:B=A(181)
1130	:POP_A(174)
1131	:AU_FLOAT_MIN_A(43)
1132	:PARAM_4(156)
1133	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 0(0, 0, 0, 0)
1142	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1147	:A=&VID(159) > 112(112, 0, 0, 0)
1152	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1157	:A=&VID(159) > 128(128, 0, 0, 0)
1162	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1167	:Extend_Instruction(255) > 0(0, 0, 0, 0) > 7(7, 0, 0, 0)
1176	:A=&VID(159) > 1152(128, 4, 0, 0)
1181	:LA=A(161)
1182	:*LA=*A_N(182) > 512(0, 2, 0, 0)
BakeCode_CompileCodes__set_var : i = 0 
1187	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
1192	:A=&VID(159) > 68(68, 0, 0, 0)
1197	:LA=A(161)
1198	:*LA=A_4(171)
BakeCode_CompileCodes__while__ : while ( i < 64 ) 
1199	:A=&VID(159) > 68(68, 0, 0, 0)
1204	:A=*A_nopush(165)
1205	:PUSH_B_CONST_4(12) > 64(64, 0, 0, 0)
1210	:CM_BOOL_INT_RBIG_A(131)
1211	:IF(151) > -16843010(254, 254, 254, 254)
BakeCode_CompileCodes Block Start {
BakeCode_CompileCodes__usefunc : av ( circle_buff , LeftChinLine [ i ] , skin_color ) 
1216	:FUNC(153)
1217	:A=&VID(159) > 44(44, 0, 0, 0)
1222	:PARAM_N_COPY_BY_ADDRESS(177) > 16(16, 0, 0, 0)
1227	:A=&VID(159) > 68(68, 0, 0, 0)
1232	:A=*A_nopush(165)
1233	:PUSH_B_CONST_4(12) > 8(8, 0, 0, 0)
1238	:AU_UINT_MUL_B(56)
1239	:A=&VID(159) > 1152(128, 4, 0, 0)
1244	:AU_INT_ADD_A(25)
1245	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1250	:A=&VID(159) > 28(28, 0, 0, 0)
1255	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1260	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 14(14, 0, 0, 0)
BakeCode_CompileCodes__set_var : i += 1 
1269	:PUSH_B_CONST_4(12) > 1(1, 0, 0, 0)
1274	:A=&VID(159) > 68(68, 0, 0, 0)
1279	:A=*A_nopush(165)
1280	:AU_INT_ADD_A(25)
1281	:A=&VID(159) > 68(68, 0, 0, 0)
1286	:LA=A(161)
1287	:*LA=A_4(171)
}; BakeCode_CompileCodes Block Finish
BakeCode_CompileCodes__set_var : i = 0 
1293	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
1298	:A=&VID(159) > 68(68, 0, 0, 0)
1303	:LA=A(161)
1304	:*LA=A_4(171)
BakeCode_CompileCodes__while__ : while ( i < 64 ) 
1305	:A=&VID(159) > 68(68, 0, 0, 0)
1310	:A=*A_nopush(165)
1311	:PUSH_B_CONST_4(12) > 64(64, 0, 0, 0)
1316	:CM_BOOL_INT_RBIG_A(131)
1317	:IF(151) > -16843010(254, 254, 254, 254)
BakeCode_CompileCodes Block Start {
BakeCode_CompileCodes__usefunc : av ( circle_buff , RightChinLine [ i ] , skin_color ) 
1322	:FUNC(153)
1323	:A=&VID(159) > 44(44, 0, 0, 0)
1328	:PARAM_N_COPY_BY_ADDRESS(177) > 16(16, 0, 0, 0)
1333	:A=&VID(159) > 68(68, 0, 0, 0)
1338	:A=*A_nopush(165)
1339	:PUSH_B_CONST_4(12) > 8(8, 0, 0, 0)
1344	:AU_UINT_MUL_B(56)
1345	:A=&VID(159) > 640(128, 2, 0, 0)
1350	:AU_INT_ADD_A(25)
1351	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1356	:A=&VID(159) > 28(28, 0, 0, 0)
1361	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1366	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 14(14, 0, 0, 0)
BakeCode_CompileCodes__set_var : i += 1 
1375	:PUSH_B_CONST_4(12) > 1(1, 0, 0, 0)
1380	:A=&VID(159) > 68(68, 0, 0, 0)
1385	:A=*A_nopush(165)
1386	:AU_INT_ADD_A(25)
1387	:A=&VID(159) > 68(68, 0, 0, 0)
1392	:LA=A(161)
1393	:*LA=A_4(171)
}; BakeCode_CompileCodes Block Finish
BakeCode_CompileCodes__usefunc : end ( circle_buff ) 
1399	:FUNC(153)
1400	:A=&VID(159) > 28(28, 0, 0, 0)
1405	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1410	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 13(13, 0, 0, 0)
BakeCode_CompileCodes__usefunc : spr_push_rbuffer ( circle_spr , circle_buff ) 
1419	:FUNC(153)
1420	:A=&VID(159) > 28(28, 0, 0, 0)
1425	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1430	:A=&VID(159) > 20(20, 0, 0, 0)
1435	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1440	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 21(21, 0, 0, 0)
BakeCode_CompileCodes__usefunc : spr_pushchild ( mainspr , _pObject ( circle_spr , _gpos ( 0 , 0 , 0 ) , _gpos ( 0 , 0 , 0 ) , _gpos ( 1 , 1 , 1 ) , 0 ) ) 
1449	:FUNC(153)
1450	:FUNC(153)
1451	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
1456	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1461	:FUNC(153)
1462	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
1467	:CASTING_A(163) > 12
1469	:PARAM_4(156)
1470	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
1475	:CASTING_A(163) > 12
1477	:PARAM_4(156)
1478	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
1483	:CASTING_A(163) > 12
1485	:PARAM_4(156)
1486	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 3(3, 0, 0, 0)
1495	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1500	:FUNC(153)
1501	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
1506	:CASTING_A(163) > 12
1508	:PARAM_4(156)
1509	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
1514	:CASTING_A(163) > 12
1516	:PARAM_4(156)
1517	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
1522	:CASTING_A(163) > 12
1524	:PARAM_4(156)
1525	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 3(3, 0, 0, 0)
1534	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1539	:FUNC(153)
1540	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
1545	:CASTING_A(163) > 12
1547	:PARAM_4(156)
1548	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
1553	:CASTING_A(163) > 12
1555	:PARAM_4(156)
1556	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
1561	:CASTING_A(163) > 12
1563	:PARAM_4(156)
1564	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 3(3, 0, 0, 0)
1573	:PARAM_N_COPY_BY_ADDRESS(177) > 12(12, 0, 0, 0)
1578	:A=&VID(159) > 20(20, 0, 0, 0)
1583	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1588	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 22(22, 0, 0, 0)
1597	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1602	:A=&VID(159) > 12(12, 0, 0, 0)
1607	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1612	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 26(26, 0, 0, 0)
BakeCode_CompileCodes__usefunc : obj_setsource ( this , mainspr ) 
1621	:FUNC(153)
1622	:A=&VID(159) > 12(12, 0, 0, 0)
1627	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1632	:A=&Global_VID(178) > 0(0, 0, 0, 0)
1637	:PARAM_N_COPY_BY_ADDRESS(177) > 8(8, 0, 0, 0)
1642	:Extend_Instruction(255) > 1(1, 0, 0, 0) > 36(36, 0, 0, 0)
BakeCode_CompileCodes__while__ : while ( true ) 
1651	:PUSH_A_CONST_4(6) > 1(1, 0, 0, 0)
1656	:IF(151) > -16843010(254, 254, 254, 254)
BakeCode_CompileCodes Block Start {
BakeCode_CompileCodes__adsetvar: int aaa = 10 
1661	:ADD_STACK_VARIABLE(0) > 1156(132, 4, 0, 0)
1666	:PUSH_A_CONST_4(6) > 10(10, 0, 0, 0)
1671	:A=&VID(159) > 1156(132, 4, 0, 0)
1676	:LA=A(161)
1677	:*LA=A_4(171)
}; BakeCode_CompileCodes Block Finish
BakeCode_CompileCodes__return_ : return 0 
1683	:PUSH_A_CONST_4(6) > 0(0, 0, 0, 0)
1688	:RETURN(157)
}; BakeCode_CompileCodes Block Finish
BakeCode_CompileCodes...finish
ICB[000002114CC8399B] BakeCode finish.
Create_New_ICB_Context From ICB[000002114CC8399B], with 4096 size memory...finish.